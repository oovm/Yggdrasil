def entry Program {
    statements:Statement
}

def Statement {
    | DefineStatement EOS?
    | EmptyStatement
}

def EmptyStatement {
    EOS
}

def MacroCalls {
    | '#' macros:Macro
    | '#' '[' macros:Macro ']'
}

def Macro {
    id:Identifier ('(' args:ArgumentValue ')')?
}




def DefineStatement {
    MacroCalls ^DEFINE modifiers:Modifiers symbol:Identifier arguments:Arguments? type:Typing? '{' body:ChoiceNode '}'
}
def DEFINE {
    "def"
}
def ChoiceNode {

}



def Modifiers {
    _Modifier+
}
def _Modifier {
    id:Identifier !('{'|'('|':'|'->'|';')
}
def Identifier {
    (XID_START | '_') XID_CONTINUE*
}

def EOS -> char {
    ';'
}