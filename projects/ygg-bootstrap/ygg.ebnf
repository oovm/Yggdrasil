@export
@position
Program = {statements:Statement};

Statement =
    @:DefineStatement [EOS]
  | @:EmptyStatement
  ;

EmptyStatement = EOS;

@char
EOS = ';';

@position
DefineStatement = define:DEFINE modifiers:Modifiers symbol:Identifier '{' body:Choice '}';

@string
@no_skip_ws
DEFINE = 'def!' | 'def';

@position
Modifiers = {id:Identifier (!'{')};

@position
Choice = [['|'] terms:Term {"|" terms:Term}];

@position
Term = {prefix:Prefix} [tag:Identifier ':'] node:Node {suffix:Suffix};

@char
Prefix = '^';

@char
Suffix = '+' | '*' | '?';

Node =
    @:Group |
    @:Charset |
    @:StringLiteral
    ;
Group = "(" body:Choice ")";
Optional = body:Choice "?";

@no_skip_ws
StringLiteral =
    '"' {!'"' body:StringItem } '"' |
    "'" {!"'" body:StringItem } "'"
    ;

@string
@no_skip_ws
StringItem = '\\' char | char;

@position
Charset = '[' {CharItem} ']';
CharItem =
    @:CharRange |
    @:CharOne
    ;
CharRange = char '-' char;
CharOne = char;

@position
Identifier = identifier:IDENTIFIER;

@string
@no_skip_ws
IDENTIFIER = (XID_START | '_') {XID_CONTINUE};


@char
@check(unicode_xid::UnicodeXID::is_xid_start)
XID_START = char;


@char
@check(unicode_xid::UnicodeXID::is_xid_continue)
XID_CONTINUE = char;