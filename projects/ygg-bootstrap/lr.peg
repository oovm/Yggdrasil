program  <- statement* WHITESPACE EOI;

statement  <- empty_statement
  / grammar_statement WHITESPACE eos?
  / fragment_statement WHITESPACE eos?
  / import_statement WHITESPACE eos?
  / ignore_statement WHITESPACE eos?
  / assign_statement WHITESPACE eos?
  / macro_define WHITESPACE eos?
;
empty_statement  <- eos;
eos  <- ";";


grammar_statement  <-
    grammar WHITESPACE symbol WHITESPACE string?
  / grammar WHITESPACE symbol WHITESPACE "{" WHITESPACE (string WHITESPACE ("," WHITESPACE string)* WHITESPACE ","?)? WHITESPACE "}"
;
grammar  <- "grammar!";

fragment_statement <- fragment WHITESPACE symbol;
fragment <- "fragment!";


import_statement  <-
    import WHITESPACE string
  / import WHITESPACE string WHITESPACE "{" WHITESPACE (symbol_alias WHITESPACE ("," WHITESPACE symbol_alias)* WHITESPACE ","?)? WHITESPACE "}"
;
import  <- "import!";

symbol_alias <- symbol WHITESPACE "as" WHITESPACE symbol;


ignore_statement  <-
    ignore WHITESPACE symbol
  / ignore WHITESPACE "{" WHITESPACE (symbol WHITESPACE ("," WHITESPACE symbol)* WHITESPACE ","?)? WHITESPACE "}"
;
ignore  <- "ignore!";



assign_statement  <- symbol WHITESPACE assign_kind WHITESPACE ("|"/"/")? WHITESPACE expr;
assign_kind  <- ("^"/"_"/"@")*  "=";

expr  <-
    "(" WHITESPACE "/"? WHITESPACE expr WHITESPACE ")"
  / symbol WHITESPACE mark_type? WHITESPACE "<-" WHITESPACE expr
  / choice_expr WHITESPACE ("/"/"/") WHITESPACE expr WHITESPACE choice_expr
  / expr WHITESPACE "~" WHITESPACE expr
  / expr WHITESPACE slice
  / expr WHITESPACE suffix
  / prefix WHITESPACE expr
  / data
;

choice_expr  <- expr WHITESPACE(mark_branch WHITESPACE mark_type?)?;
mark_branch  <- ("^"/ "!")? WHITESPACE "#" WHITESPACE symbol;
mark_type  <- ":" WHITESPACE symbol;
prefix  <- "!" / "&" / "^" / "*" / "%";
suffix  <- "?" / "+" / "-"/ "*";

data   <- macro_call
  / regex_range
  / list
  / symbol_path
  / integer
  / special
  ;

list   <- "{" WHITESPACE (data WHITESPACE ("," WHITESPACE data)* WHITESPACE ","?)? WHITESPACE "}";
slice  <- "{" WHITESPACE integer WHITESPACE "," WHITESPACE integer WHITESPACE  "}";

regex_range  <- "[" WHITESPACE (!"]" WHITESPACE . / "\\" WHITESPACE .)* WHITESPACE "]";


macro_call  <-
    "@" symbol_path WHITESPACE "(" WHITESPACE (macro_kv WHITESPACE ("," WHITESPACE macro_kv)* WHITESPACE ","?)? WHITESPACE")"
;
macro_kv  <-  symbol WHITESPACE " <-" WHITESPACE expr / expr;



macro_define  <-
    "macro!" WHITESPACE symbol WHITESPACE  "(" WHITESPACE(macro_arg WHITESPACE ("," WHITESPACE macro_arg)* WHITESPACE ","?)? WHITESPACE ")" WHITESPACE block
;
macro_arg  <- symbol WHITESPACE (":" WHITESPACE symbol)? WHITESPACE ("=" WHITESPACE expr)?;
block  <- "{" WHITESPACE "return"? WHITESPACE expr WHITESPACE "}";


string  <-
    "'" WHITESPACE (!"\'" WHITESPACE . / "\\" WHITESPACE .)* WHITESPACE "'"
  / "\"" WHITESPACE (!"\"" WHITESPACE . / "\\" WHITESPACE .)* WHITESPACE "\""
;

integer  <- "0"/ "ASCII_NONZERO_DIGIT" ("_"? "ASCII_DIGIT")*;

special  <- "true"/"false"/"null";

symbol_path  <-
    symbol WHITESPACE (("::"/".") WHITESPACE symbol)*
;
symbol  <- XID_IDENTIFIER;