RootNode {
    statement: [
        GrammarStatement(
            GrammarStatementNode {
                grammar_block: GrammarBlockNode {
                    span: 18..22,
                },
                identifier: IdentifierNode {
                    text: "Bootstrap",
                    span: 8..17,
                },
                span: 0..22,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Statement",
                                                            span: 41..50,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 41..51,
                                                },
                                                span: 41..51,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "EOI",
                                                            span: 52..55,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 52..56,
                                                },
                                                span: 52..56,
                                            },
                                        ],
                                        span: 41..56,
                                    },
                                ],
                                span: 41..56,
                            },
                        ],
                        span: 41..56,
                    },
                    span: 35..57,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Root",
                    span: 30..34,
                },
                span: 24..57,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GrammarStatement",
                                                            span: 83..99,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 83..104,
                                                },
                                                span: 83..104,
                                            },
                                        ],
                                        span: 83..104,
                                    },
                                ],
                                span: 83..104,
                            },
                            span: 81..104,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ClassStatement",
                                                            span: 106..120,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 106..125,
                                                },
                                                span: 106..125,
                                            },
                                        ],
                                        span: 106..125,
                                    },
                                ],
                                span: 106..125,
                            },
                            span: 104..125,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "UnionStatement",
                                                            span: 127..141,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 127..146,
                                                },
                                                span: 127..146,
                                            },
                                        ],
                                        span: 127..146,
                                    },
                                ],
                                span: 127..146,
                            },
                            span: 125..146,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupStatement",
                                                            span: 148..162,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 148..167,
                                                },
                                                span: 148..167,
                                            },
                                        ],
                                        span: 148..167,
                                    },
                                ],
                                span: 148..167,
                            },
                            span: 146..167,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExternalStatement",
                                                            span: 169..186,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 169..187,
                                                },
                                                span: 169..187,
                                            },
                                        ],
                                        span: 169..187,
                                    },
                                ],
                                span: 169..187,
                            },
                            span: 167..187,
                        },
                    ],
                    span: 75..188,
                },
                name: IdentifierNode {
                    text: "Statement",
                    span: 65..74,
                },
                span: 59..188,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_GRAMMAR",
                                                            span: 340..350,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 339..351,
                                                },
                                                span: 339..351,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 351..361,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 351..362,
                                                },
                                                span: 351..362,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GrammarBlock",
                                                            span: 362..374,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 362..375,
                                                },
                                                span: 362..375,
                                            },
                                        ],
                                        span: 339..375,
                                    },
                                ],
                                span: 339..375,
                            },
                        ],
                        span: 339..375,
                    },
                    span: 333..376,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GrammarStatement",
                    span: 316..332,
                },
                span: 310..376,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 403..404,
                                                            },
                                                            span: 402..405,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 402..406,
                                                },
                                                span: 402..406,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 407..408,
                                                            },
                                                            span: 406..409,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 406..410,
                                                },
                                                span: 406..410,
                                            },
                                        ],
                                        span: 402..410,
                                    },
                                ],
                                span: 402..410,
                            },
                        ],
                        span: 402..410,
                    },
                    span: 396..411,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GrammarBlock",
                    span: 383..395,
                },
                span: 377..411,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorCall",
                                                            span: 558..571,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 558..572,
                                                },
                                                span: 558..572,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ModifierCall",
                                                            span: 573..585,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 573..586,
                                                },
                                                span: 573..586,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_CLASS",
                                                            span: 588..596,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 587..597,
                                                },
                                                span: 587..597,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "name",
                                                                                                span: 598..602,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 603..613,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 603..613,
                                                                                        },
                                                                                        span: 598..613,
                                                                                    },
                                                                                ],
                                                                                span: 598..613,
                                                                            },
                                                                        ],
                                                                        span: 598..613,
                                                                    },
                                                                ],
                                                                span: 598..613,
                                                            },
                                                            span: 597..614,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 597..615,
                                                },
                                                span: 597..615,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "->",
                                                                                                        span: 617..619,
                                                                                                    },
                                                                                                    span: 616..620,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 616..621,
                                                                                        },
                                                                                        span: 616..621,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "cast",
                                                                                                span: 621..625,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 626..636,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 626..636,
                                                                                        },
                                                                                        span: 621..636,
                                                                                    },
                                                                                ],
                                                                                span: 616..636,
                                                                            },
                                                                        ],
                                                                        span: 616..636,
                                                                    },
                                                                ],
                                                                span: 616..636,
                                                            },
                                                            span: 615..637,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 615..638,
                                                },
                                                span: 615..638,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "OP_REMARK",
                                                            span: 639..648,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 639..649,
                                                },
                                                span: 639..649,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ClassBlock",
                                                            span: 650..660,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 650..661,
                                                },
                                                span: 650..661,
                                            },
                                        ],
                                        span: 558..661,
                                    },
                                ],
                                span: 558..661,
                            },
                        ],
                        span: 558..661,
                    },
                    span: 552..662,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ClassStatement",
                    span: 537..551,
                },
                span: 531..662,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 687..688,
                                                            },
                                                            span: 686..689,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 686..690,
                                                },
                                                span: 686..690,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "|",
                                                                span: 691..692,
                                                            },
                                                            span: 690..693,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 690..694,
                                                },
                                                span: 690..694,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Expression",
                                                            span: 695..705,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 695..706,
                                                },
                                                span: 695..706,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 707..708,
                                                            },
                                                            span: 706..709,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 706..710,
                                                },
                                                span: 706..710,
                                            },
                                        ],
                                        span: 686..710,
                                    },
                                ],
                                span: 686..710,
                            },
                        ],
                        span: 686..710,
                    },
                    span: 680..711,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ClassBlock",
                    span: 669..679,
                },
                span: 663..711,
            },
        ),
        GroupStatement(
            GroupStatementNode {
                decorator_call: [],
                group_block: GroupBlockNode {
                    group_pair: [
                        GroupPairNode {
                            atomic: StringRaw(
                                StringRawNode {
                                    string_raw_text: StringRawTextNode {
                                        text: "^",
                                        span: 736..737,
                                    },
                                    span: 735..738,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "OP_REMARK",
                                span: 724..733,
                            },
                            span: 724..738,
                        },
                    ],
                    span: 718..740,
                },
                identifier: None,
                modifier_call: [],
                span: 712..740,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorCall",
                                                            span: 887..900,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 887..901,
                                                },
                                                span: 887..901,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ModifierCall",
                                                            span: 902..914,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 902..915,
                                                },
                                                span: 902..915,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_UNION",
                                                            span: 917..925,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 916..926,
                                                },
                                                span: 916..926,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "name",
                                                                                                span: 927..931,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 932..942,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 932..942,
                                                                                        },
                                                                                        span: 927..942,
                                                                                    },
                                                                                ],
                                                                                span: 927..942,
                                                                            },
                                                                        ],
                                                                        span: 927..942,
                                                                    },
                                                                ],
                                                                span: 927..942,
                                                            },
                                                            span: 926..943,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 926..944,
                                                },
                                                span: 926..944,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "OP_REMARK",
                                                            span: 944..953,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 944..954,
                                                },
                                                span: 944..954,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "UnionBlock",
                                                            span: 955..965,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 955..966,
                                                },
                                                span: 955..966,
                                            },
                                        ],
                                        span: 887..966,
                                    },
                                ],
                                span: 887..966,
                            },
                        ],
                        span: 887..966,
                    },
                    span: 881..967,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "UnionStatement",
                    span: 866..880,
                },
                span: 860..967,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 992..993,
                                                            },
                                                            span: 991..994,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 991..995,
                                                },
                                                span: 991..995,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "UnionBranch",
                                                            span: 995..1006,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 995..1007,
                                                },
                                                span: 995..1007,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 1009..1010,
                                                            },
                                                            span: 1008..1011,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1008..1012,
                                                },
                                                span: 1008..1012,
                                            },
                                        ],
                                        span: 991..1012,
                                    },
                                ],
                                span: 991..1012,
                            },
                        ],
                        span: 991..1012,
                    },
                    span: 985..1013,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "UnionBlock",
                    span: 974..984,
                },
                span: 968..1013,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "|",
                                                                span: 1039..1040,
                                                            },
                                                            span: 1038..1041,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1038..1042,
                                                },
                                                span: 1038..1042,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionHard",
                                                            span: 1042..1056,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1042..1057,
                                                },
                                                span: 1042..1057,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "BranchTag",
                                                            span: 1057..1066,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 1057..1067,
                                                },
                                                span: 1057..1067,
                                            },
                                        ],
                                        span: 1038..1067,
                                    },
                                ],
                                span: 1038..1068,
                            },
                        ],
                        span: 1038..1068,
                    },
                    span: 1032..1069,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "UnionBranch",
                    span: 1020..1031,
                },
                span: 1014..1069,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "#",
                                                                span: 1114..1115,
                                                            },
                                                            span: 1113..1116,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1113..1117,
                                                },
                                                span: 1113..1117,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1117..1127,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1117..1128,
                                                },
                                                span: 1117..1128,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RightAssociativity",
                                                            span: 1128..1146,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 1128..1147,
                                                },
                                                span: 1128..1147,
                                            },
                                        ],
                                        span: 1113..1147,
                                    },
                                ],
                                span: 1113..1148,
                            },
                        ],
                        span: 1113..1148,
                    },
                    span: 1107..1149,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "field",
                                                                        span: 1077..1082,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 1077..1082,
                                                            },
                                                            span: 1077..1082,
                                                        },
                                                    ],
                                                    span: 1077..1082,
                                                },
                                            ],
                                            span: 1077..1082,
                                        },
                                    ],
                                    span: 1077..1082,
                                },
                            ],
                            span: 1076..1083,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 1071..1076,
                            },
                            span: 1070..1076,
                        },
                        span: 1070..1083,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 1084..1090,
                        },
                        span: 1084..1090,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "BranchTag",
                    span: 1097..1106,
                },
                span: 1070..1149,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ">",
                                                                span: 1182..1183,
                                                            },
                                                            span: 1181..1184,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1181..1185,
                                                },
                                                span: 1181..1185,
                                            },
                                        ],
                                        span: 1181..1185,
                                    },
                                ],
                                span: 1181..1185,
                            },
                        ],
                        span: 1181..1185,
                    },
                    span: 1175..1186,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RightAssociativity",
                    span: 1156..1174,
                },
                span: 1150..1186,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorCall",
                                                            span: 1335..1348,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1335..1349,
                                                },
                                                span: 1335..1349,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ModifierCall",
                                                            span: 1350..1362,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1350..1363,
                                                },
                                                span: 1350..1363,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_GROUP",
                                                            span: 1365..1373,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 1364..1374,
                                                },
                                                span: 1364..1374,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1374..1384,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 1374..1385,
                                                },
                                                span: 1374..1385,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupBlock",
                                                            span: 1386..1396,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1386..1397,
                                                },
                                                span: 1386..1397,
                                            },
                                        ],
                                        span: 1335..1397,
                                    },
                                ],
                                span: 1335..1397,
                            },
                        ],
                        span: 1335..1397,
                    },
                    span: 1329..1398,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GroupStatement",
                    span: 1314..1328,
                },
                span: 1308..1398,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 1423..1424,
                                                            },
                                                            span: 1422..1425,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1422..1426,
                                                },
                                                span: 1422..1426,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupPair",
                                                            span: 1426..1435,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1426..1436,
                                                },
                                                span: 1426..1436,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 1438..1439,
                                                            },
                                                            span: 1437..1440,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1437..1441,
                                                },
                                                span: 1437..1441,
                                            },
                                        ],
                                        span: 1422..1441,
                                    },
                                ],
                                span: 1422..1441,
                            },
                        ],
                        span: 1422..1441,
                    },
                    span: 1416..1442,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GroupBlock",
                    span: 1405..1415,
                },
                span: 1399..1442,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1465..1475,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1465..1476,
                                                },
                                                span: 1465..1476,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ":",
                                                                span: 1477..1478,
                                                            },
                                                            span: 1476..1479,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1476..1480,
                                                },
                                                span: 1476..1480,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Atomic",
                                                            span: 1480..1486,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1480..1487,
                                                },
                                                span: 1480..1487,
                                            },
                                        ],
                                        span: 1465..1487,
                                    },
                                ],
                                span: 1465..1487,
                            },
                        ],
                        span: 1465..1487,
                    },
                    span: 1459..1488,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GroupPair",
                    span: 1449..1458,
                },
                span: 1443..1488,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_EXTERNAL",
                                                            span: 1643..1654,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1643..1655,
                                                },
                                                span: 1643..1655,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1655..1665,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1655..1666,
                                                },
                                                span: 1655..1666,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "LinkerBlock",
                                                            span: 1666..1677,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1666..1678,
                                                },
                                                span: 1666..1678,
                                            },
                                        ],
                                        span: 1643..1678,
                                    },
                                ],
                                span: 1643..1678,
                            },
                        ],
                        span: 1643..1678,
                    },
                    span: 1637..1679,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ExternalStatement",
                    span: 1619..1636,
                },
                span: 1613..1679,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 1705..1706,
                                                            },
                                                            span: 1704..1707,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1704..1708,
                                                },
                                                span: 1704..1708,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "LinkerPair",
                                                            span: 1708..1718,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1708..1719,
                                                },
                                                span: 1708..1719,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 1721..1722,
                                                            },
                                                            span: 1720..1723,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1720..1724,
                                                },
                                                span: 1720..1724,
                                            },
                                        ],
                                        span: 1704..1724,
                                    },
                                ],
                                span: 1704..1724,
                            },
                        ],
                        span: 1704..1724,
                    },
                    span: 1698..1725,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "LinkerBlock",
                    span: 1686..1697,
                },
                span: 1680..1725,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1749..1759,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1749..1760,
                                                },
                                                span: 1749..1760,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ":",
                                                                span: 1761..1762,
                                                            },
                                                            span: 1760..1763,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1760..1764,
                                                },
                                                span: 1760..1764,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "NamepathFree",
                                                            span: 1764..1776,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1764..1777,
                                                },
                                                span: 1764..1777,
                                            },
                                        ],
                                        span: 1749..1777,
                                    },
                                ],
                                span: 1749..1777,
                            },
                        ],
                        span: 1749..1777,
                    },
                    span: 1743..1778,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "LinkerPair",
                    span: 1732..1742,
                },
                span: 1726..1778,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorName",
                                                            span: 1926..1939,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1926..1940,
                                                },
                                                span: 1926..1940,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "CallBody",
                                                            span: 1940..1948,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1940..1949,
                                                },
                                                span: 1940..1949,
                                            },
                                        ],
                                        span: 1926..1949,
                                    },
                                ],
                                span: 1926..1949,
                            },
                        ],
                        span: 1926..1949,
                    },
                    span: 1920..1950,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "DecoratorCall",
                    span: 1906..1919,
                },
                span: 1900..1950,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexRange(
                                                        RegexRangeNode {
                                                            regex_negative: None,
                                                            text: "[@\\#]",
                                                            span: 1996..2001,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1996..2002,
                                                },
                                                span: 1996..2002,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 2002..2012,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2002..2013,
                                                },
                                                span: 2002..2013,
                                            },
                                        ],
                                        span: 1996..2013,
                                    },
                                ],
                                span: 1996..2013,
                            },
                        ],
                        span: 1996..2013,
                    },
                    span: 1990..2014,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "annotation",
                                                                        span: 1958..1968,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 1958..1968,
                                                            },
                                                            span: 1958..1968,
                                                        },
                                                    ],
                                                    span: 1958..1968,
                                                },
                                            ],
                                            span: 1958..1968,
                                        },
                                    ],
                                    span: 1958..1968,
                                },
                            ],
                            span: 1957..1969,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 1952..1957,
                            },
                            span: 1951..1957,
                        },
                        span: 1951..1969,
                    },
                ],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "DecoratorName",
                    span: 1976..1989,
                },
                span: 1951..2014,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "FunctionName",
                                                            span: 2040..2052,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2040..2053,
                                                },
                                                span: 2040..2053,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "CallBody",
                                                            span: 2053..2061,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2053..2062,
                                                },
                                                span: 2053..2062,
                                            },
                                        ],
                                        span: 2040..2062,
                                    },
                                ],
                                span: 2040..2062,
                            },
                        ],
                        span: 2040..2062,
                    },
                    span: 2034..2063,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "FunctionCall",
                    span: 2021..2033,
                },
                span: 2015..2063,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "@",
                                                                span: 2107..2108,
                                                            },
                                                            span: 2106..2109,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2106..2110,
                                                },
                                                span: 2106..2110,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 2110..2120,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2110..2121,
                                                },
                                                span: 2110..2121,
                                            },
                                        ],
                                        span: 2106..2121,
                                    },
                                ],
                                span: 2106..2121,
                            },
                        ],
                        span: 2106..2121,
                    },
                    span: 2100..2122,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "function",
                                                                        span: 2071..2079,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2071..2079,
                                                            },
                                                            span: 2071..2079,
                                                        },
                                                    ],
                                                    span: 2071..2079,
                                                },
                                            ],
                                            span: 2071..2079,
                                        },
                                    ],
                                    span: 2071..2079,
                                },
                            ],
                            span: 2070..2080,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 2065..2070,
                            },
                            span: 2064..2070,
                        },
                        span: 2064..2080,
                    },
                ],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "FunctionName",
                    span: 2087..2099,
                },
                span: 2064..2122,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "(",
                                                                span: 2145..2146,
                                                            },
                                                            span: 2144..2147,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2144..2148,
                                                },
                                                span: 2144..2148,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Expression",
                                                                                                    span: 2149..2159,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2149..2160,
                                                                                        },
                                                                                        span: 2149..2160,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: GroupExpression(
                                                                                                GroupExpressionNode {
                                                                                                    expression: ExpressionNode {
                                                                                                        expression_hard: [
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: StringRaw(
                                                                                                                                        StringRawNode {
                                                                                                                                            string_raw_text: StringRawTextNode {
                                                                                                                                                text: ",",
                                                                                                                                                span: 2162..2163,
                                                                                                                                            },
                                                                                                                                            span: 2161..2164,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 2161..2165,
                                                                                                                                },
                                                                                                                                span: 2161..2165,
                                                                                                                            },
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: Identifier(
                                                                                                                                        IdentifierNode {
                                                                                                                                            text: "Expression",
                                                                                                                                            span: 2165..2175,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 2165..2175,
                                                                                                                                },
                                                                                                                                span: 2165..2175,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 2161..2175,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 2161..2175,
                                                                                                            },
                                                                                                        ],
                                                                                                        span: 2161..2175,
                                                                                                    },
                                                                                                    span: 2160..2176,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [
                                                                                                Many,
                                                                                            ],
                                                                                            span: 2160..2177,
                                                                                        },
                                                                                        span: 2160..2177,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: ",",
                                                                                                        span: 2179..2180,
                                                                                                    },
                                                                                                    span: 2178..2181,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [
                                                                                                Optional,
                                                                                            ],
                                                                                            span: 2178..2182,
                                                                                        },
                                                                                        span: 2178..2182,
                                                                                    },
                                                                                ],
                                                                                span: 2149..2182,
                                                                            },
                                                                        ],
                                                                        span: 2149..2182,
                                                                    },
                                                                ],
                                                                span: 2149..2182,
                                                            },
                                                            span: 2148..2183,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 2148..2184,
                                                },
                                                span: 2148..2184,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ")",
                                                                span: 2186..2187,
                                                            },
                                                            span: 2185..2188,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2185..2189,
                                                },
                                                span: 2185..2189,
                                            },
                                        ],
                                        span: 2144..2189,
                                    },
                                ],
                                span: 2144..2189,
                            },
                        ],
                        span: 2144..2189,
                    },
                    span: 2138..2190,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "CallBody",
                    span: 2129..2137,
                },
                span: 2123..2190,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionHard",
                                                            span: 2335..2349,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2335..2350,
                                                },
                                                span: 2335..2350,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "|",
                                                                                                        span: 2352..2353,
                                                                                                    },
                                                                                                    span: 2351..2354,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2351..2355,
                                                                                        },
                                                                                        span: 2351..2355,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ExpressionHard",
                                                                                                    span: 2355..2369,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2355..2369,
                                                                                        },
                                                                                        span: 2355..2369,
                                                                                    },
                                                                                ],
                                                                                span: 2351..2369,
                                                                            },
                                                                        ],
                                                                        span: 2351..2369,
                                                                    },
                                                                ],
                                                                span: 2351..2369,
                                                            },
                                                            span: 2350..2370,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 2350..2371,
                                                },
                                                span: 2350..2371,
                                            },
                                        ],
                                        span: 2335..2371,
                                    },
                                ],
                                span: 2335..2372,
                            },
                        ],
                        span: 2335..2372,
                    },
                    span: 2333..2373,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Expression",
                    span: 2318..2328,
                },
                span: 2312..2373,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionSoft",
                                                            span: 2397..2411,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2397..2412,
                                                },
                                                span: 2397..2412,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "~",
                                                                                                        span: 2414..2415,
                                                                                                    },
                                                                                                    span: 2413..2416,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2413..2417,
                                                                                        },
                                                                                        span: 2413..2417,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ExpressionSoft",
                                                                                                    span: 2417..2431,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2417..2431,
                                                                                        },
                                                                                        span: 2417..2431,
                                                                                    },
                                                                                ],
                                                                                span: 2413..2431,
                                                                            },
                                                                        ],
                                                                        span: 2413..2431,
                                                                    },
                                                                ],
                                                                span: 2413..2431,
                                                            },
                                                            span: 2412..2432,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 2412..2433,
                                                },
                                                span: 2412..2433,
                                            },
                                        ],
                                        span: 2397..2433,
                                    },
                                ],
                                span: 2397..2434,
                            },
                        ],
                        span: 2397..2434,
                    },
                    span: 2395..2435,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ExpressionHard",
                    span: 2380..2394,
                },
                span: 2374..2435,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionTag",
                                                            span: 2459..2472,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2459..2473,
                                                },
                                                span: 2459..2473,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionTag",
                                                            span: 2473..2486,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 2473..2487,
                                                },
                                                span: 2473..2487,
                                            },
                                        ],
                                        span: 2459..2487,
                                    },
                                ],
                                span: 2459..2488,
                            },
                        ],
                        span: 2459..2488,
                    },
                    span: 2457..2489,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ExpressionSoft",
                    span: 2442..2456,
                },
                span: 2436..2489,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 2514..2524,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2514..2525,
                                                                                        },
                                                                                        span: 2514..2525,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: ":",
                                                                                                        span: 2526..2527,
                                                                                                    },
                                                                                                    span: 2525..2528,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2525..2528,
                                                                                        },
                                                                                        span: 2525..2528,
                                                                                    },
                                                                                ],
                                                                                span: 2514..2528,
                                                                            },
                                                                        ],
                                                                        span: 2514..2528,
                                                                    },
                                                                ],
                                                                span: 2514..2528,
                                                            },
                                                            span: 2513..2529,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 2513..2530,
                                                },
                                                span: 2513..2530,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Term",
                                                            span: 2531..2535,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2531..2536,
                                                },
                                                span: 2531..2536,
                                            },
                                        ],
                                        span: 2513..2536,
                                    },
                                ],
                                span: 2513..2536,
                            },
                        ],
                        span: 2513..2536,
                    },
                    span: 2511..2537,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ExpressionTag",
                    span: 2496..2509,
                },
                span: 2490..2537,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Prefix",
                                                            span: 2555..2561,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 2555..2562,
                                                },
                                                span: 2555..2562,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Atomic",
                                                            span: 2563..2569,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2563..2570,
                                                },
                                                span: 2563..2570,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Suffix",
                                                            span: 2570..2576,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 2570..2577,
                                                },
                                                span: 2570..2577,
                                            },
                                        ],
                                        span: 2555..2577,
                                    },
                                ],
                                span: 2555..2578,
                            },
                        ],
                        span: 2555..2578,
                    },
                    span: 2549..2579,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Term",
                    span: 2544..2548,
                },
                span: 2538..2579,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Negative",
                                        span: 2606..2614,
                                    },
                                    right_associativity: None,
                                    span: 2605..2614,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "!",
                                                                span: 2602..2603,
                                                            },
                                                            span: 2601..2604,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2601..2605,
                                                },
                                                span: 2601..2605,
                                            },
                                        ],
                                        span: 2601..2605,
                                    },
                                ],
                                span: 2601..2605,
                            },
                            span: 2599..2614,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Positive",
                                        span: 2626..2634,
                                    },
                                    right_associativity: None,
                                    span: 2625..2634,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "&",
                                                                span: 2622..2623,
                                                            },
                                                            span: 2621..2624,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2621..2625,
                                                },
                                                span: 2621..2625,
                                            },
                                        ],
                                        span: 2621..2625,
                                    },
                                ],
                                span: 2621..2625,
                            },
                            span: 2619..2634,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Remark",
                                        span: 2646..2652,
                                    },
                                    right_associativity: None,
                                    span: 2645..2652,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "^",
                                                                span: 2642..2643,
                                                            },
                                                            span: 2641..2644,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2641..2645,
                                                },
                                                span: 2641..2645,
                                            },
                                        ],
                                        span: 2641..2645,
                                    },
                                ],
                                span: 2641..2645,
                            },
                            span: 2639..2652,
                        },
                    ],
                    span: 2593..2654,
                },
                name: IdentifierNode {
                    text: "Prefix",
                    span: 2586..2592,
                },
                span: 2580..2654,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Optional",
                                        span: 2681..2689,
                                    },
                                    right_associativity: None,
                                    span: 2680..2689,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "?",
                                                                span: 2677..2678,
                                                            },
                                                            span: 2676..2679,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2676..2680,
                                                },
                                                span: 2676..2680,
                                            },
                                        ],
                                        span: 2676..2680,
                                    },
                                ],
                                span: 2676..2680,
                            },
                            span: 2674..2689,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Many",
                                        span: 2701..2705,
                                    },
                                    right_associativity: None,
                                    span: 2700..2705,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "*",
                                                                span: 2697..2698,
                                                            },
                                                            span: 2696..2699,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2696..2700,
                                                },
                                                span: 2696..2700,
                                            },
                                        ],
                                        span: 2696..2700,
                                    },
                                ],
                                span: 2696..2700,
                            },
                            span: 2694..2705,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Many1",
                                        span: 2717..2722,
                                    },
                                    right_associativity: None,
                                    span: 2716..2722,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "+",
                                                                span: 2713..2714,
                                                            },
                                                            span: 2712..2715,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2712..2716,
                                                },
                                                span: 2712..2716,
                                            },
                                        ],
                                        span: 2712..2716,
                                    },
                                ],
                                span: 2712..2716,
                            },
                            span: 2710..2722,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RangeExact",
                                                            span: 2729..2739,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2729..2744,
                                                },
                                                span: 2729..2744,
                                            },
                                        ],
                                        span: 2729..2744,
                                    },
                                ],
                                span: 2729..2744,
                            },
                            span: 2727..2744,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Range",
                                                            span: 2746..2751,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2746..2752,
                                                },
                                                span: 2746..2752,
                                            },
                                        ],
                                        span: 2746..2752,
                                    },
                                ],
                                span: 2746..2752,
                            },
                            span: 2744..2752,
                        },
                    ],
                    span: 2668..2753,
                },
                name: IdentifierNode {
                    text: "Suffix",
                    span: 2661..2667,
                },
                span: 2655..2753,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupExpression",
                                                            span: 2896..2911,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2896..2916,
                                                },
                                                span: 2896..2916,
                                            },
                                        ],
                                        span: 2896..2916,
                                    },
                                ],
                                span: 2896..2916,
                            },
                            span: 2894..2916,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "FunctionCall",
                                                            span: 2918..2930,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2918..2935,
                                                },
                                                span: 2918..2935,
                                            },
                                        ],
                                        span: 2918..2935,
                                    },
                                ],
                                span: 2918..2935,
                            },
                            span: 2916..2935,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Boolean",
                                                            span: 2937..2944,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2937..2949,
                                                },
                                                span: 2937..2949,
                                            },
                                        ],
                                        span: 2937..2949,
                                    },
                                ],
                                span: 2937..2949,
                            },
                            span: 2935..2949,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Integer",
                                                            span: 2951..2958,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2951..2963,
                                                },
                                                span: 2951..2963,
                                            },
                                        ],
                                        span: 2951..2963,
                                    },
                                ],
                                span: 2951..2963,
                            },
                            span: 2949..2963,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringRaw",
                                                            span: 2965..2974,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2965..2979,
                                                },
                                                span: 2965..2979,
                                            },
                                        ],
                                        span: 2965..2979,
                                    },
                                ],
                                span: 2965..2979,
                            },
                            span: 2963..2979,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringNormal",
                                                            span: 2981..2993,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2981..2998,
                                                },
                                                span: 2981..2998,
                                            },
                                        ],
                                        span: 2981..2998,
                                    },
                                ],
                                span: 2981..2998,
                            },
                            span: 2979..2998,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Category",
                                                            span: 3000..3008,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3000..3013,
                                                },
                                                span: 3000..3013,
                                            },
                                        ],
                                        span: 3000..3013,
                                    },
                                ],
                                span: 3000..3013,
                            },
                            span: 2998..3013,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "EscapedUnicode",
                                                            span: 3015..3029,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3015..3034,
                                                },
                                                span: 3015..3034,
                                            },
                                        ],
                                        span: 3015..3034,
                                    },
                                ],
                                span: 3015..3034,
                            },
                            span: 3013..3034,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexEmbed",
                                                            span: 3036..3046,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3036..3051,
                                                },
                                                span: 3036..3051,
                                            },
                                        ],
                                        span: 3036..3051,
                                    },
                                ],
                                span: 3036..3051,
                            },
                            span: 3034..3051,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexRange",
                                                            span: 3053..3063,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3053..3068,
                                                },
                                                span: 3053..3068,
                                            },
                                        ],
                                        span: 3053..3068,
                                    },
                                ],
                                span: 3053..3068,
                            },
                            span: 3051..3068,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 3070..3080,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3070..3081,
                                                },
                                                span: 3070..3081,
                                            },
                                        ],
                                        span: 3070..3081,
                                    },
                                ],
                                span: 3070..3081,
                            },
                            span: 3068..3081,
                        },
                    ],
                    span: 2888..3082,
                },
                name: IdentifierNode {
                    text: "Atomic",
                    span: 2881..2887,
                },
                span: 2875..3082,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "(",
                                                                span: 3112..3113,
                                                            },
                                                            span: 3111..3114,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3111..3115,
                                                },
                                                span: 3111..3115,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "|",
                                                                span: 3116..3117,
                                                            },
                                                            span: 3115..3118,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 3115..3119,
                                                },
                                                span: 3115..3119,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Expression",
                                                            span: 3120..3130,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3120..3131,
                                                },
                                                span: 3120..3131,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ")",
                                                                span: 3132..3133,
                                                            },
                                                            span: 3131..3134,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3131..3135,
                                                },
                                                span: 3131..3135,
                                            },
                                        ],
                                        span: 3111..3135,
                                    },
                                ],
                                span: 3111..3135,
                            },
                        ],
                        span: 3111..3135,
                    },
                    span: 3105..3136,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GroupExpression",
                    span: 3089..3104,
                },
                span: 3083..3136,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringNormal(
                                                        StringNormalNode {
                                                            string_item: [
                                                                TextAny(
                                                                    TextAnyNode {
                                                                        text: "'",
                                                                        span: 3289..3290,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 3288..3291,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3288..3292,
                                                },
                                                span: 3288..3292,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringRawText",
                                                            span: 3292..3305,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3292..3306,
                                                },
                                                span: 3292..3306,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringNormal(
                                                        StringNormalNode {
                                                            string_item: [
                                                                TextAny(
                                                                    TextAnyNode {
                                                                        text: "'",
                                                                        span: 3307..3308,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 3306..3309,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3306..3310,
                                                },
                                                span: 3306..3310,
                                            },
                                        ],
                                        span: 3288..3310,
                                    },
                                ],
                                span: 3288..3310,
                            },
                        ],
                        span: 3288..3310,
                    },
                    span: 3282..3311,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3259..3265,
                        },
                        span: 3259..3265,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "StringRaw",
                    span: 3272..3281,
                },
                span: 3259..3311,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 3344..3345,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "^",
                                                                        span: 3345..3346,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "'",
                                                                        span: 3346..3347,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 3347..3348,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "*",
                                                                        span: 3348..3349,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 3343..3350,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3343..3351,
                                                },
                                                span: 3343..3351,
                                            },
                                        ],
                                        span: 3343..3351,
                                    },
                                ],
                                span: 3343..3351,
                            },
                        ],
                        span: 3343..3351,
                    },
                    span: 3337..3352,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3312..3316,
                        },
                        span: 3312..3316,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "StringRawText",
                    span: 3323..3336,
                },
                span: 3312..3352,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "\"",
                                                                span: 3386..3387,
                                                            },
                                                            span: 3385..3388,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3385..3389,
                                                },
                                                span: 3385..3389,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringItem",
                                                            span: 3389..3399,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 3389..3400,
                                                },
                                                span: 3389..3400,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "\"",
                                                                span: 3402..3403,
                                                            },
                                                            span: 3401..3404,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3401..3405,
                                                },
                                                span: 3401..3405,
                                            },
                                        ],
                                        span: 3385..3405,
                                    },
                                ],
                                span: 3385..3405,
                            },
                        ],
                        span: 3385..3405,
                    },
                    span: 3379..3406,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3353..3359,
                        },
                        span: 3353..3359,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "StringNormal",
                    span: 3366..3378,
                },
                span: 3353..3406,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "EscapedUnicode",
                                                            span: 3432..3446,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3432..3451,
                                                },
                                                span: 3432..3451,
                                            },
                                        ],
                                        span: 3432..3451,
                                    },
                                ],
                                span: 3432..3451,
                            },
                            span: 3430..3451,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "EscapedCharacter",
                                                            span: 3453..3469,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3453..3474,
                                                },
                                                span: 3453..3474,
                                            },
                                        ],
                                        span: 3453..3474,
                                    },
                                ],
                                span: 3453..3474,
                            },
                            span: 3451..3474,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "TextAny",
                                                            span: 3476..3483,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3476..3484,
                                                },
                                                span: 3476..3484,
                                            },
                                        ],
                                        span: 3476..3484,
                                    },
                                ],
                                span: 3476..3484,
                            },
                            span: 3474..3484,
                        },
                    ],
                    span: 3424..3485,
                },
                name: IdentifierNode {
                    text: "StringItem",
                    span: 3413..3423,
                },
                span: 3407..3485,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "\\u{",
                                                                span: 3536..3539,
                                                            },
                                                            span: 3535..3540,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3535..3541,
                                                },
                                                span: 3535..3541,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "HEX",
                                                            span: 3541..3544,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3541..3545,
                                                },
                                                span: 3541..3545,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 3546..3547,
                                                            },
                                                            span: 3545..3548,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3545..3549,
                                                },
                                                span: 3545..3549,
                                            },
                                        ],
                                        span: 3535..3549,
                                    },
                                ],
                                span: 3535..3549,
                            },
                        ],
                        span: 3535..3549,
                    },
                    span: 3529..3550,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "escape",
                                                                        span: 3493..3499,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 3493..3499,
                                                            },
                                                            span: 3493..3499,
                                                        },
                                                    ],
                                                    span: 3493..3499,
                                                },
                                            ],
                                            span: 3493..3499,
                                        },
                                    ],
                                    span: 3493..3499,
                                },
                            ],
                            span: 3492..3500,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 3487..3492,
                            },
                            span: 3486..3492,
                        },
                        span: 3486..3500,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3501..3507,
                        },
                        span: 3501..3507,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "EscapedUnicode",
                    span: 3514..3528,
                },
                span: 3486..3550,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "\\",
                                                                span: 3608..3609,
                                                            },
                                                            span: 3607..3610,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3607..3611,
                                                },
                                                span: 3607..3611,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ANY",
                                                            span: 3611..3614,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3611..3615,
                                                },
                                                span: 3611..3615,
                                            },
                                        ],
                                        span: 3607..3615,
                                    },
                                ],
                                span: 3607..3615,
                            },
                        ],
                        span: 3607..3615,
                    },
                    span: 3601..3616,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "escape",
                                                                        span: 3558..3564,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 3558..3564,
                                                            },
                                                            span: 3558..3564,
                                                        },
                                                    ],
                                                    span: 3558..3564,
                                                },
                                            ],
                                            span: 3558..3564,
                                        },
                                    ],
                                    span: 3558..3564,
                                },
                            ],
                            span: 3557..3565,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 3552..3557,
                            },
                            span: 3551..3557,
                        },
                        span: 3551..3565,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3566..3572,
                        },
                        span: 3566..3572,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3573..3577,
                        },
                        span: 3573..3577,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "EscapedCharacter",
                    span: 3584..3600,
                },
                span: 3551..3616,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexRange(
                                                        RegexRangeNode {
                                                            regex_negative: None,
                                                            text: "[0-9a-fA-F]",
                                                            span: 3638..3649,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Range(
                                                            RangeNode {
                                                                max: Some(
                                                                    IntegerNode {
                                                                        text: "6",
                                                                        span: 3653..3654,
                                                                    },
                                                                ),
                                                                min: Some(
                                                                    IntegerNode {
                                                                        text: "1",
                                                                        span: 3650..3651,
                                                                    },
                                                                ),
                                                                span: 3649..3655,
                                                            },
                                                        ),
                                                    ],
                                                    span: 3638..3655,
                                                },
                                                span: 3638..3655,
                                            },
                                        ],
                                        span: 3638..3656,
                                    },
                                ],
                                span: 3638..3656,
                            },
                        ],
                        span: 3638..3656,
                    },
                    span: 3632..3657,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3617..3621,
                        },
                        span: 3617..3621,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "HEX",
                    span: 3628..3631,
                },
                span: 3617..3657,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 3684..3685,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "^",
                                                                        span: 3685..3686,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "\"",
                                                                        span: 3686..3687,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\\\",
                                                                        span: 3687..3689,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\\\",
                                                                        span: 3689..3691,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 3691..3692,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "+",
                                                                        span: 3692..3693,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 3683..3694,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3683..3695,
                                                },
                                                span: 3683..3695,
                                            },
                                        ],
                                        span: 3683..3695,
                                    },
                                ],
                                span: 3683..3695,
                            },
                        ],
                        span: 3683..3695,
                    },
                    span: 3677..3696,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3658..3662,
                        },
                        span: 3658..3662,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "TextAny",
                    span: 3669..3676,
                },
                span: 3658..3696,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "/",
                                                                span: 3849..3850,
                                                            },
                                                            span: 3848..3851,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3848..3852,
                                                },
                                                span: 3848..3852,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexItem",
                                                            span: 3852..3861,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many1,
                                                    ],
                                                    span: 3852..3862,
                                                },
                                                span: 3852..3862,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "/",
                                                                span: 3864..3865,
                                                            },
                                                            span: 3863..3866,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3863..3867,
                                                },
                                                span: 3863..3867,
                                            },
                                        ],
                                        span: 3848..3867,
                                    },
                                ],
                                span: 3848..3867,
                            },
                        ],
                        span: 3848..3867,
                    },
                    span: 3842..3868,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3818..3824,
                        },
                        span: 3818..3824,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RegexEmbed",
                    span: 3831..3841,
                },
                span: 3818..3868,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "EscapedCharacter",
                                                            span: 3893..3909,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3893..3914,
                                                },
                                                span: 3893..3914,
                                            },
                                        ],
                                        span: 3893..3914,
                                    },
                                ],
                                span: 3893..3914,
                            },
                            span: 3891..3914,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexCharacter",
                                                            span: 3916..3930,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3916..3931,
                                                },
                                                span: 3916..3931,
                                            },
                                        ],
                                        span: 3916..3931,
                                    },
                                ],
                                span: 3916..3931,
                            },
                            span: 3914..3931,
                        },
                    ],
                    span: 3885..3932,
                },
                name: IdentifierNode {
                    text: "RegexItem",
                    span: 3875..3884,
                },
                span: 3869..3932,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "/",
                                                                span: 3974..3975,
                                                            },
                                                            span: 3973..3976,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Negative,
                                                    ],
                                                    suffix: [],
                                                    span: 3972..3977,
                                                },
                                                span: 3972..3977,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ANY",
                                                            span: 3977..3980,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3977..3981,
                                                },
                                                span: 3977..3981,
                                            },
                                        ],
                                        span: 3972..3981,
                                    },
                                ],
                                span: 3972..3981,
                            },
                        ],
                        span: 3972..3981,
                    },
                    span: 3966..3982,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3933..3939,
                        },
                        span: 3933..3939,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3940..3944,
                        },
                        span: 3940..3944,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RegexCharacter",
                    span: 3951..3965,
                },
                span: 3933..3982,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "[",
                                                                span: 4019..4020,
                                                            },
                                                            span: 4018..4021,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4018..4022,
                                                },
                                                span: 4018..4022,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexNegative",
                                                            span: 4022..4035,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 4022..4036,
                                                },
                                                span: 4022..4036,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "]",
                                                                                                        span: 4040..4041,
                                                                                                    },
                                                                                                    span: 4039..4042,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [
                                                                                                Negative,
                                                                                            ],
                                                                                            suffix: [],
                                                                                            span: 4038..4043,
                                                                                        },
                                                                                        span: 4038..4043,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ANY",
                                                                                                    span: 4043..4046,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4043..4046,
                                                                                        },
                                                                                        span: 4043..4046,
                                                                                    },
                                                                                ],
                                                                                span: 4038..4046,
                                                                            },
                                                                        ],
                                                                        span: 4038..4046,
                                                                    },
                                                                ],
                                                                span: 4038..4046,
                                                            },
                                                            span: 4037..4047,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 4037..4048,
                                                },
                                                span: 4037..4048,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "]",
                                                                span: 4050..4051,
                                                            },
                                                            span: 4049..4052,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4049..4053,
                                                },
                                                span: 4049..4053,
                                            },
                                        ],
                                        span: 4018..4053,
                                    },
                                ],
                                span: 4018..4053,
                            },
                        ],
                        span: 4018..4053,
                    },
                    span: 4012..4054,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3983..3989,
                        },
                        span: 3983..3989,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3990..3994,
                        },
                        span: 3990..3994,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RegexRange",
                    span: 4001..4011,
                },
                span: 3983..4054,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "^",
                                                                span: 4082..4083,
                                                            },
                                                            span: 4081..4084,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4081..4085,
                                                },
                                                span: 4081..4085,
                                            },
                                        ],
                                        span: 4081..4085,
                                    },
                                ],
                                span: 4081..4085,
                            },
                        ],
                        span: 4081..4085,
                    },
                    span: 4075..4086,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RegexNegative",
                    span: 4061..4074,
                },
                span: 4055..4086,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "OP_CATEGORY",
                                                            span: 4236..4247,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 4235..4248,
                                                },
                                                span: 4235..4248,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 4249..4250,
                                                            },
                                                            span: 4248..4251,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4248..4252,
                                                },
                                                span: 4248..4252,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "group",
                                                                                                span: 4253..4258,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 4259..4269,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4259..4270,
                                                                                        },
                                                                                        span: 4253..4270,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "=",
                                                                                                        span: 4271..4272,
                                                                                                    },
                                                                                                    span: 4270..4273,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4270..4273,
                                                                                        },
                                                                                        span: 4270..4273,
                                                                                    },
                                                                                ],
                                                                                span: 4253..4273,
                                                                            },
                                                                        ],
                                                                        span: 4253..4273,
                                                                    },
                                                                ],
                                                                span: 4253..4273,
                                                            },
                                                            span: 4252..4274,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 4252..4275,
                                                },
                                                span: 4252..4275,
                                            },
                                            ExpressionTagNode {
                                                identifier: Some(
                                                    IdentifierNode {
                                                        text: "script",
                                                        span: 4276..4282,
                                                    },
                                                ),
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 4283..4293,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4283..4294,
                                                },
                                                span: 4276..4294,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 4295..4296,
                                                            },
                                                            span: 4294..4297,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4294..4298,
                                                },
                                                span: 4294..4298,
                                            },
                                        ],
                                        span: 4235..4298,
                                    },
                                ],
                                span: 4235..4298,
                            },
                        ],
                        span: 4235..4298,
                    },
                    span: 4229..4299,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Category",
                    span: 4220..4228,
                },
                span: 4214..4299,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 4458..4468,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4458..4469,
                                                },
                                                span: 4458..4469,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: GroupExpression(
                                                                                                GroupExpressionNode {
                                                                                                    expression: ExpressionNode {
                                                                                                        expression_hard: [
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: StringRaw(
                                                                                                                                        StringRawNode {
                                                                                                                                            string_raw_text: StringRawTextNode {
                                                                                                                                                text: ".",
                                                                                                                                                span: 4472..4473,
                                                                                                                                            },
                                                                                                                                            span: 4471..4474,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 4471..4475,
                                                                                                                                },
                                                                                                                                span: 4471..4475,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 4471..4475,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 4471..4475,
                                                                                                            },
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: StringRaw(
                                                                                                                                        StringRawNode {
                                                                                                                                            string_raw_text: StringRawTextNode {
                                                                                                                                                text: "::",
                                                                                                                                                span: 4478..4480,
                                                                                                                                            },
                                                                                                                                            span: 4477..4481,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 4477..4481,
                                                                                                                                },
                                                                                                                                span: 4477..4481,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 4477..4481,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 4477..4481,
                                                                                                            },
                                                                                                        ],
                                                                                                        span: 4471..4481,
                                                                                                    },
                                                                                                    span: 4470..4482,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4470..4483,
                                                                                        },
                                                                                        span: 4470..4483,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 4483..4493,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4483..4493,
                                                                                        },
                                                                                        span: 4483..4493,
                                                                                    },
                                                                                ],
                                                                                span: 4470..4493,
                                                                            },
                                                                        ],
                                                                        span: 4470..4493,
                                                                    },
                                                                ],
                                                                span: 4470..4493,
                                                            },
                                                            span: 4469..4494,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 4469..4495,
                                                },
                                                span: 4469..4495,
                                            },
                                        ],
                                        span: 4458..4495,
                                    },
                                ],
                                span: 4458..4496,
                            },
                        ],
                        span: 4458..4496,
                    },
                    span: 4452..4497,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: Some(
                    IdentifierNode {
                        text: "Namepath",
                        span: 4443..4451,
                    },
                ),
                name: IdentifierNode {
                    text: "NamepathFree",
                    span: 4427..4439,
                },
                span: 4421..4497,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 4519..4529,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4519..4530,
                                                },
                                                span: 4519..4530,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "::",
                                                                                                        span: 4532..4534,
                                                                                                    },
                                                                                                    span: 4531..4535,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4531..4536,
                                                                                        },
                                                                                        span: 4531..4536,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 4536..4546,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4536..4546,
                                                                                        },
                                                                                        span: 4536..4546,
                                                                                    },
                                                                                ],
                                                                                span: 4531..4546,
                                                                            },
                                                                        ],
                                                                        span: 4531..4546,
                                                                    },
                                                                ],
                                                                span: 4531..4546,
                                                            },
                                                            span: 4530..4547,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 4530..4548,
                                                },
                                                span: 4530..4548,
                                            },
                                        ],
                                        span: 4519..4548,
                                    },
                                ],
                                span: 4519..4549,
                            },
                        ],
                        span: 4519..4549,
                    },
                    span: 4513..4550,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Namepath",
                    span: 4504..4512,
                },
                span: 4498..4550,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 4580..4581,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "_",
                                                                        span: 4581..4582,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\p",
                                                                        span: 4582..4584,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "{",
                                                                        span: 4584..4585,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "X",
                                                                        span: 4585..4586,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "I",
                                                                        span: 4586..4587,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "D",
                                                                        span: 4587..4588,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "_",
                                                                        span: 4588..4589,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "s",
                                                                        span: 4589..4590,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "t",
                                                                        span: 4590..4591,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "a",
                                                                        span: 4591..4592,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "r",
                                                                        span: 4592..4593,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "t",
                                                                        span: 4593..4594,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "}",
                                                                        span: 4594..4595,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 4595..4596,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\p",
                                                                        span: 4596..4598,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "{",
                                                                        span: 4598..4599,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "X",
                                                                        span: 4599..4600,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "I",
                                                                        span: 4600..4601,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "D",
                                                                        span: 4601..4602,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "_",
                                                                        span: 4602..4603,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "c",
                                                                        span: 4603..4604,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "o",
                                                                        span: 4604..4605,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "n",
                                                                        span: 4605..4606,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "t",
                                                                        span: 4606..4607,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "i",
                                                                        span: 4607..4608,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "n",
                                                                        span: 4608..4609,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "u",
                                                                        span: 4609..4610,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "e",
                                                                        span: 4610..4611,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "}",
                                                                        span: 4611..4612,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "*",
                                                                        span: 4612..4613,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 4579..4614,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4579..4615,
                                                },
                                                span: 4579..4615,
                                            },
                                        ],
                                        span: 4579..4615,
                                    },
                                ],
                                span: 4579..4615,
                            },
                        ],
                        span: 4579..4615,
                    },
                    span: 4573..4616,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 4551..4555,
                        },
                        span: 4551..4555,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Identifier",
                    span: 4562..4572,
                },
                span: 4551..4616,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "True",
                                        span: 4648..4652,
                                    },
                                    right_associativity: None,
                                    span: 4647..4652,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "true",
                                                                span: 4640..4644,
                                                            },
                                                            span: 4639..4645,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4639..4647,
                                                },
                                                span: 4639..4647,
                                            },
                                        ],
                                        span: 4639..4647,
                                    },
                                ],
                                span: 4639..4647,
                            },
                            span: 4637..4652,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "False",
                                        span: 4668..4673,
                                    },
                                    right_associativity: None,
                                    span: 4667..4673,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "false",
                                                                span: 4660..4665,
                                                            },
                                                            span: 4659..4666,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4659..4667,
                                                },
                                                span: 4659..4667,
                                            },
                                        ],
                                        span: 4659..4667,
                                    },
                                ],
                                span: 4659..4667,
                            },
                            span: 4657..4673,
                        },
                    ],
                    span: 4631..4675,
                },
                name: IdentifierNode {
                    text: "Boolean",
                    span: 4623..4630,
                },
                span: 4617..4675,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "0",
                                                                        span: 4821..4822,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "|",
                                                                        span: 4822..4823,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 4823..4824,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "1",
                                                                        span: 4824..4825,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "-",
                                                                        span: 4825..4826,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "9",
                                                                        span: 4826..4827,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 4827..4828,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 4828..4829,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "0",
                                                                        span: 4829..4830,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "-",
                                                                        span: 4830..4831,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "9",
                                                                        span: 4831..4832,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 4832..4833,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "*",
                                                                        span: 4833..4834,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 4820..4835,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4820..4836,
                                                },
                                                span: 4820..4836,
                                            },
                                        ],
                                        span: 4820..4836,
                                    },
                                ],
                                span: 4820..4836,
                            },
                        ],
                        span: 4820..4836,
                    },
                    span: 4814..4837,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 4795..4799,
                        },
                        span: 4795..4799,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Integer",
                    span: 4806..4813,
                },
                span: 4795..4837,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 4862..4863,
                                                            },
                                                            span: 4861..4864,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4861..4865,
                                                },
                                                span: 4861..4865,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Integer",
                                                            span: 4865..4872,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4865..4873,
                                                },
                                                span: 4865..4873,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 4874..4875,
                                                            },
                                                            span: 4873..4876,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4873..4877,
                                                },
                                                span: 4873..4877,
                                            },
                                        ],
                                        span: 4861..4877,
                                    },
                                ],
                                span: 4861..4877,
                            },
                        ],
                        span: 4861..4877,
                    },
                    span: 4855..4878,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RangeExact",
                    span: 4844..4854,
                },
                span: 4838..4878,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 4898..4899,
                                                            },
                                                            span: 4897..4900,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4897..4901,
                                                },
                                                span: 4897..4901,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "min",
                                                                                                span: 4902..4905,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Integer",
                                                                                                    span: 4906..4913,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4906..4913,
                                                                                        },
                                                                                        span: 4902..4913,
                                                                                    },
                                                                                ],
                                                                                span: 4902..4913,
                                                                            },
                                                                        ],
                                                                        span: 4902..4913,
                                                                    },
                                                                ],
                                                                span: 4902..4913,
                                                            },
                                                            span: 4901..4914,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 4901..4915,
                                                },
                                                span: 4901..4915,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ",",
                                                                span: 4917..4918,
                                                            },
                                                            span: 4916..4919,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4916..4920,
                                                },
                                                span: 4916..4920,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "max",
                                                                                                span: 4921..4924,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Integer",
                                                                                                    span: 4925..4932,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4925..4932,
                                                                                        },
                                                                                        span: 4921..4932,
                                                                                    },
                                                                                ],
                                                                                span: 4921..4932,
                                                                            },
                                                                        ],
                                                                        span: 4921..4932,
                                                                    },
                                                                ],
                                                                span: 4921..4932,
                                                            },
                                                            span: 4920..4933,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 4920..4934,
                                                },
                                                span: 4920..4934,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 4936..4937,
                                                            },
                                                            span: 4935..4938,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4935..4939,
                                                },
                                                span: 4935..4939,
                                            },
                                        ],
                                        span: 4897..4939,
                                    },
                                ],
                                span: 4897..4939,
                            },
                        ],
                        span: 4897..4939,
                    },
                    span: 4891..4940,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Range",
                    span: 4885..4890,
                },
                span: 4879..4940,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_CLASS",
                                                                                                    span: 5098..5106,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5098..5107,
                                                                                        },
                                                                                        span: 5098..5107,
                                                                                    },
                                                                                ],
                                                                                span: 5098..5107,
                                                                            },
                                                                        ],
                                                                        span: 5098..5107,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_UNION",
                                                                                                    span: 5109..5117,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5109..5118,
                                                                                        },
                                                                                        span: 5109..5118,
                                                                                    },
                                                                                ],
                                                                                span: 5109..5118,
                                                                            },
                                                                        ],
                                                                        span: 5109..5118,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_GROUP",
                                                                                                    span: 5120..5128,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5120..5129,
                                                                                        },
                                                                                        span: 5120..5129,
                                                                                    },
                                                                                ],
                                                                                span: 5120..5129,
                                                                            },
                                                                        ],
                                                                        span: 5120..5129,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_MACRO",
                                                                                                    span: 5131..5139,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5131..5140,
                                                                                        },
                                                                                        span: 5131..5140,
                                                                                    },
                                                                                ],
                                                                                span: 5131..5140,
                                                                            },
                                                                        ],
                                                                        span: 5131..5140,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_CLIMB",
                                                                                                    span: 5142..5150,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5142..5150,
                                                                                        },
                                                                                        span: 5142..5150,
                                                                                    },
                                                                                ],
                                                                                span: 5142..5150,
                                                                            },
                                                                        ],
                                                                        span: 5142..5150,
                                                                    },
                                                                ],
                                                                span: 5098..5150,
                                                            },
                                                            span: 5097..5151,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Negative,
                                                    ],
                                                    suffix: [],
                                                    span: 5096..5152,
                                                },
                                                span: 5096..5152,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 5153..5163,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 5152..5164,
                                                },
                                                span: 5152..5164,
                                            },
                                        ],
                                        span: 5096..5164,
                                    },
                                ],
                                span: 5096..5164,
                            },
                        ],
                        span: 5096..5164,
                    },
                    span: 5090..5165,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 5062..5068,
                        },
                        span: 5062..5068,
                    },
                ],
                op_remark: Some(
                    OpRemarkNode {
                        span: 5088..5089,
                    },
                ),
                cast: None,
                name: IdentifierNode {
                    text: "ModifierCall",
                    span: 5075..5087,
                },
                span: 5062..5165,
            },
        ),
        GroupStatement(
            GroupStatementNode {
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Boolean(
                                                                    False,
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5175..5180,
                                                            },
                                                            span: 5175..5180,
                                                        },
                                                    ],
                                                    span: 5175..5180,
                                                },
                                            ],
                                            span: 5175..5180,
                                        },
                                    ],
                                    span: 5175..5180,
                                },
                            ],
                            span: 5174..5181,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "railway",
                                span: 5167..5174,
                            },
                            span: 5166..5174,
                        },
                        span: 5166..5181,
                    },
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "keyword",
                                                                        span: 5189..5196,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5189..5196,
                                                            },
                                                            span: 5189..5196,
                                                        },
                                                    ],
                                                    span: 5189..5196,
                                                },
                                            ],
                                            span: 5189..5196,
                                        },
                                    ],
                                    span: 5189..5196,
                                },
                            ],
                            span: 5188..5197,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 5183..5188,
                            },
                            span: 5182..5188,
                        },
                        span: 5182..5197,
                    },
                ],
                group_block: GroupBlockNode {
                    group_pair: [
                        GroupPairNode {
                            atomic: StringRaw(
                                StringRawNode {
                                    string_raw_text: StringRawTextNode {
                                        text: "\\p",
                                        span: 5224..5226,
                                    },
                                    span: 5223..5227,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "OP_CATEGORY",
                                span: 5210..5221,
                            },
                            span: 5210..5227,
                        },
                    ],
                    span: 5204..5229,
                },
                identifier: None,
                modifier_call: [],
                span: 5166..5229,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Boolean(
                                                                    False,
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5239..5244,
                                                            },
                                                            span: 5239..5244,
                                                        },
                                                    ],
                                                    span: 5239..5244,
                                                },
                                            ],
                                            span: 5239..5244,
                                        },
                                    ],
                                    span: 5239..5244,
                                },
                            ],
                            span: 5238..5245,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "railway",
                                span: 5231..5238,
                            },
                            span: 5230..5238,
                        },
                        span: 5230..5245,
                    },
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "keyword",
                                                                        span: 5253..5260,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5253..5260,
                                                            },
                                                            span: 5253..5260,
                                                        },
                                                    ],
                                                    span: 5253..5260,
                                                },
                                            ],
                                            span: 5253..5260,
                                        },
                                    ],
                                    span: 5253..5260,
                                },
                            ],
                            span: 5252..5261,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 5247..5252,
                            },
                            span: 5246..5252,
                        },
                        span: 5246..5261,
                    },
                ],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Parser",
                                        span: 5301..5307,
                                    },
                                    right_associativity: None,
                                    span: 5300..5307,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "parser",
                                                                span: 5289..5295,
                                                            },
                                                            span: 5288..5296,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5288..5300,
                                                },
                                                span: 5288..5300,
                                            },
                                        ],
                                        span: 5288..5300,
                                    },
                                ],
                                span: 5288..5300,
                            },
                            span: 5286..5307,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Inspector",
                                        span: 5327..5336,
                                    },
                                    right_associativity: None,
                                    span: 5326..5336,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "inspector",
                                                                span: 5315..5324,
                                                            },
                                                            span: 5314..5325,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5314..5326,
                                                },
                                                span: 5314..5326,
                                            },
                                        ],
                                        span: 5314..5326,
                                    },
                                ],
                                span: 5314..5326,
                            },
                            span: 5312..5336,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "External",
                                        span: 5356..5364,
                                    },
                                    right_associativity: None,
                                    span: 5355..5364,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "external",
                                                                span: 5344..5352,
                                                            },
                                                            span: 5343..5353,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5343..5355,
                                                },
                                                span: 5343..5355,
                                            },
                                        ],
                                        span: 5343..5355,
                                    },
                                ],
                                span: 5343..5355,
                            },
                            span: 5341..5364,
                        },
                    ],
                    span: 5280..5366,
                },
                name: IdentifierNode {
                    text: "KW_EXTERNAL",
                    span: 5268..5279,
                },
                span: 5230..5366,
            },
        ),
        GroupStatement(
            GroupStatementNode {
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Boolean(
                                                                    False,
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5376..5381,
                                                            },
                                                            span: 5376..5381,
                                                        },
                                                    ],
                                                    span: 5376..5381,
                                                },
                                            ],
                                            span: 5376..5381,
                                        },
                                    ],
                                    span: 5376..5381,
                                },
                            ],
                            span: 5375..5382,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "railway",
                                span: 5368..5375,
                            },
                            span: 5367..5375,
                        },
                        span: 5367..5382,
                    },
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "keyword",
                                                                        span: 5390..5397,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5390..5397,
                                                            },
                                                            span: 5390..5397,
                                                        },
                                                    ],
                                                    span: 5390..5397,
                                                },
                                            ],
                                            span: 5390..5397,
                                        },
                                    ],
                                    span: 5390..5397,
                                },
                            ],
                            span: 5389..5398,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 5384..5389,
                            },
                            span: 5383..5389,
                        },
                        span: 5383..5398,
                    },
                ],
                group_block: GroupBlockNode {
                    group_pair: [
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "g",
                                                span: 5424..5425,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5425..5426,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "a",
                                                span: 5426..5427,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5427..5428,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5428..5429,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "a",
                                                span: 5429..5430,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5430..5431,
                                            },
                                        ),
                                    ],
                                    span: 5423..5432,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_GRAMMAR",
                                span: 5411..5421,
                            },
                            span: 5411..5432,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5449..5450,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "s",
                                                span: 5450..5451,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "i",
                                                span: 5451..5452,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5452..5453,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "g",
                                                span: 5453..5454,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5454..5455,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5455..5456,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "s",
                                                span: 5456..5457,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "e",
                                                span: 5457..5458,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5458..5459,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "i",
                                                span: 5459..5460,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5460..5461,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "p",
                                                span: 5461..5462,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5462..5463,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5463..5464,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "t",
                                                span: 5464..5465,
                                            },
                                        ),
                                    ],
                                    span: 5448..5466,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_IMPORT",
                                span: 5437..5446,
                            },
                            span: 5437..5466,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5482..5483,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "l",
                                                span: 5483..5484,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "a",
                                                span: 5484..5485,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "s",
                                                span: 5485..5486,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "s",
                                                span: 5486..5487,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5487..5488,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "s",
                                                span: 5488..5489,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "t",
                                                span: 5489..5490,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5490..5491,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5491..5492,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5492..5493,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "t",
                                                span: 5493..5494,
                                            },
                                        ),
                                    ],
                                    span: 5481..5495,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_CLASS",
                                span: 5471..5479,
                            },
                            span: 5471..5495,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5511..5512,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5512..5513,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "i",
                                                span: 5513..5514,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5514..5515,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5515..5516,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5516..5517,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "e",
                                                span: 5517..5518,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5518..5519,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5519..5520,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5520..5521,
                                            },
                                        ),
                                    ],
                                    span: 5510..5522,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_UNION",
                                span: 5500..5508,
                            },
                            span: 5500..5522,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "g",
                                                span: 5538..5539,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5539..5540,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5540..5541,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5541..5542,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "p",
                                                span: 5542..5543,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5543..5544,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "t",
                                                span: 5544..5545,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5545..5546,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "k",
                                                span: 5546..5547,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "e",
                                                span: 5547..5548,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5548..5549,
                                            },
                                        ),
                                    ],
                                    span: 5537..5550,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_GROUP",
                                span: 5527..5535,
                            },
                            span: 5527..5550,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5566..5567,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "l",
                                                span: 5567..5568,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "i",
                                                span: 5568..5569,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5569..5570,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "b",
                                                span: 5570..5571,
                                            },
                                        ),
                                    ],
                                    span: 5565..5572,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_CLIMB",
                                span: 5555..5563,
                            },
                            span: 5555..5572,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5588..5589,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "a",
                                                span: 5589..5590,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5590..5591,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5591..5592,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5592..5593,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5593..5594,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "d",
                                                span: 5594..5595,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "e",
                                                span: 5595..5596,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "f",
                                                span: 5596..5597,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5597..5598,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "f",
                                                span: 5598..5599,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5599..5600,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5600..5601,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5601..5602,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "t",
                                                span: 5602..5603,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "i",
                                                span: 5603..5604,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5604..5605,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5605..5606,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5606..5607,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "f",
                                                span: 5607..5608,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5608..5609,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5609..5610,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5610..5611,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5611..5612,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "f",
                                                span: 5612..5613,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5613..5614,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5614..5615,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5615..5616,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "f",
                                                span: 5616..5617,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5617..5618,
                                            },
                                        ),
                                    ],
                                    span: 5587..5619,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_MACRO",
                                span: 5577..5585,
                            },
                            span: 5577..5619,
                        },
                    ],
                    span: 5405..5621,
                },
                identifier: None,
                modifier_call: [],
                span: 5367..5621,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\p",
                                                                        span: 5788..5790,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "{",
                                                                        span: 5790..5791,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "W",
                                                                        span: 5791..5792,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "h",
                                                                        span: 5792..5793,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "i",
                                                                        span: 5793..5794,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "t",
                                                                        span: 5794..5795,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "e",
                                                                        span: 5795..5796,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "_",
                                                                        span: 5796..5797,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "S",
                                                                        span: 5797..5798,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "p",
                                                                        span: 5798..5799,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "a",
                                                                        span: 5799..5800,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "c",
                                                                        span: 5800..5801,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "e",
                                                                        span: 5801..5802,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "}",
                                                                        span: 5802..5803,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "+",
                                                                        span: 5803..5804,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 5787..5805,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5787..5806,
                                                },
                                                span: 5787..5806,
                                            },
                                        ],
                                        span: 5787..5806,
                                    },
                                ],
                                span: 5787..5806,
                            },
                        ],
                        span: 5787..5806,
                    },
                    span: 5781..5807,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Boolean(
                                                                    False,
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5752..5757,
                                                            },
                                                            span: 5752..5757,
                                                        },
                                                    ],
                                                    span: 5752..5757,
                                                },
                                            ],
                                            span: 5752..5757,
                                        },
                                    ],
                                    span: 5752..5757,
                                },
                            ],
                            span: 5751..5758,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "railway",
                                span: 5744..5751,
                            },
                            span: 5743..5751,
                        },
                        span: 5743..5758,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "hide",
                            span: 5759..5763,
                        },
                        span: 5759..5763,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "WhiteSpace",
                    span: 5770..5780,
                },
                span: 5743..5807,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\/",
                                                                        span: 5852..5854,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\/",
                                                                        span: 5854..5856,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 5856..5857,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "^",
                                                                        span: 5857..5858,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\n",
                                                                        span: 5858..5860,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\r",
                                                                        span: 5860..5862,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 5862..5863,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "*",
                                                                        span: 5863..5864,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 5851..5865,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5851..5883,
                                                },
                                                span: 5851..5883,
                                            },
                                        ],
                                        span: 5851..5883,
                                    },
                                ],
                                span: 5851..5883,
                            },
                        ],
                        span: 5851..5883,
                    },
                    span: 5843..5884,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "comment",
                                                                        span: 5815..5822,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5815..5822,
                                                            },
                                                            span: 5815..5822,
                                                        },
                                                    ],
                                                    span: 5815..5822,
                                                },
                                            ],
                                            span: 5815..5822,
                                        },
                                    ],
                                    span: 5815..5822,
                                },
                            ],
                            span: 5814..5823,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 5809..5814,
                            },
                            span: 5808..5814,
                        },
                        span: 5808..5823,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "hide",
                            span: 5824..5828,
                        },
                        span: 5824..5828,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Comment",
                    span: 5835..5842,
                },
                span: 5808..5884,
            },
        ),
    ],
    span: 0..5884,
}