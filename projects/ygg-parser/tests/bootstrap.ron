RootNode {
    statement: [
        GrammarStatement(
            GrammarStatementNode {
                grammar_block: GrammarBlockNode {
                    span: 18..22,
                },
                identifier: IdentifierNode {
                    text: "Bootstrap",
                    span: 8..17,
                },
                span: 0..22,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "Root",
                    span: 36..40,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "entry",
                            span: 24..29,
                        },
                        span: 24..29,
                    },
                ],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Statement",
                                                            span: 47..56,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 47..57,
                                                },
                                                span: 47..57,
                                            },
                                        ],
                                        span: 47..58,
                                    },
                                ],
                                span: 47..58,
                            },
                        ],
                        span: 47..58,
                    },
                    span: 41..59,
                },
                span: 24..59,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GrammarStatement",
                                                            span: 85..101,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 85..106,
                                                },
                                                span: 85..106,
                                            },
                                        ],
                                        span: 85..106,
                                    },
                                ],
                                span: 85..106,
                            },
                            span: 83..106,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ClassStatement",
                                                            span: 108..122,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 108..127,
                                                },
                                                span: 108..127,
                                            },
                                        ],
                                        span: 108..127,
                                    },
                                ],
                                span: 108..127,
                            },
                            span: 106..127,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "UnionStatement",
                                                            span: 129..143,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 129..148,
                                                },
                                                span: 129..148,
                                            },
                                        ],
                                        span: 129..148,
                                    },
                                ],
                                span: 129..148,
                            },
                            span: 127..148,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupStatement",
                                                            span: 150..164,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 150..165,
                                                },
                                                span: 150..165,
                                            },
                                        ],
                                        span: 150..165,
                                    },
                                ],
                                span: 150..165,
                            },
                            span: 148..165,
                        },
                    ],
                    span: 77..166,
                },
                name: IdentifierNode {
                    text: "Statement",
                    span: 67..76,
                },
                span: 61..166,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "GrammarStatement",
                    span: 294..310,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_GRAMMAR",
                                                            span: 318..328,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Prefix2,
                                                    ],
                                                    suffix: [],
                                                    span: 317..329,
                                                },
                                                span: 317..329,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 329..339,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 329..340,
                                                },
                                                span: 329..340,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GrammarBlock",
                                                            span: 340..352,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 340..353,
                                                },
                                                span: 340..353,
                                            },
                                        ],
                                        span: 317..353,
                                    },
                                ],
                                span: 317..353,
                            },
                        ],
                        span: 317..353,
                    },
                    span: 311..354,
                },
                span: 288..354,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "GrammarBlock",
                    span: 361..373,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'{'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 380..384,
                                                },
                                                span: 380..384,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'}'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 384..388,
                                                },
                                                span: 384..388,
                                            },
                                        ],
                                        span: 380..388,
                                    },
                                ],
                                span: 380..388,
                            },
                        ],
                        span: 380..388,
                    },
                    span: 374..389,
                },
                span: 355..389,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "ClassStatement",
                    span: 515..529,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorCall",
                                                            span: 536..549,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 536..550,
                                                },
                                                span: 536..550,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ModifierCall",
                                                            span: 551..563,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 551..564,
                                                },
                                                span: 551..564,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_CLASS",
                                                            span: 566..574,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Prefix2,
                                                    ],
                                                    suffix: [],
                                                    span: 565..575,
                                                },
                                                span: 565..575,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "name",
                                                                                                span: 576..580,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 581..591,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 581..591,
                                                                                        },
                                                                                        span: 576..591,
                                                                                    },
                                                                                ],
                                                                                span: 576..591,
                                                                            },
                                                                        ],
                                                                        span: 576..591,
                                                                    },
                                                                ],
                                                                span: 576..591,
                                                            },
                                                            span: 575..592,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 575..593,
                                                },
                                                span: 575..593,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: String(
                                                                                                String0(
                                                                                                    "'->'",
                                                                                                ),
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 594..599,
                                                                                        },
                                                                                        span: 594..599,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "cast",
                                                                                                span: 599..603,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 604..614,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 604..614,
                                                                                        },
                                                                                        span: 599..614,
                                                                                    },
                                                                                ],
                                                                                span: 594..614,
                                                                            },
                                                                        ],
                                                                        span: 594..614,
                                                                    },
                                                                ],
                                                                span: 594..614,
                                                            },
                                                            span: 593..615,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 593..616,
                                                },
                                                span: 593..616,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "OP_REMARK",
                                                            span: 617..626,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 617..627,
                                                },
                                                span: 617..627,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ClassBlock",
                                                            span: 628..638,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 628..639,
                                                },
                                                span: 628..639,
                                            },
                                        ],
                                        span: 536..639,
                                    },
                                ],
                                span: 536..639,
                            },
                        ],
                        span: 536..639,
                    },
                    span: 530..640,
                },
                span: 509..640,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "ClassBlock",
                    span: 647..657,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'{'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 664..668,
                                                },
                                                span: 664..668,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'|'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 668..672,
                                                },
                                                span: 668..672,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Expression",
                                                            span: 673..683,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 673..684,
                                                },
                                                span: 673..684,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'}'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 684..688,
                                                },
                                                span: 684..688,
                                            },
                                        ],
                                        span: 664..688,
                                    },
                                ],
                                span: 664..688,
                            },
                        ],
                        span: 664..688,
                    },
                    span: 658..689,
                },
                span: 641..689,
            },
        ),
        GroupStatement(
            GroupStatementNode {
                decorator_call: [],
                group_block: GroupBlockNode {
                    group_pair: [
                        GroupPairNode {
                            atomic: String(
                                String0(
                                    "'^'",
                                ),
                            ),
                            identifier: IdentifierNode {
                                text: "OP_REMARK",
                                span: 702..711,
                            },
                            span: 702..716,
                        },
                    ],
                    span: 696..718,
                },
                identifier: None,
                modifier_call: [],
                span: 690..718,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "UnionStatement",
                    span: 844..858,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorCall",
                                                            span: 865..878,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 865..879,
                                                },
                                                span: 865..879,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ModifierCall",
                                                            span: 880..892,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 880..893,
                                                },
                                                span: 880..893,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_UNION",
                                                            span: 895..903,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Prefix2,
                                                    ],
                                                    suffix: [],
                                                    span: 894..904,
                                                },
                                                span: 894..904,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "name",
                                                                                                span: 905..909,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 910..920,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 910..920,
                                                                                        },
                                                                                        span: 905..920,
                                                                                    },
                                                                                ],
                                                                                span: 905..920,
                                                                            },
                                                                        ],
                                                                        span: 905..920,
                                                                    },
                                                                ],
                                                                span: 905..920,
                                                            },
                                                            span: 904..921,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 904..922,
                                                },
                                                span: 904..922,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "OP_REMARK",
                                                            span: 922..931,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 922..932,
                                                },
                                                span: 922..932,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "UnionBlock",
                                                            span: 933..943,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 933..944,
                                                },
                                                span: 933..944,
                                            },
                                        ],
                                        span: 865..944,
                                    },
                                ],
                                span: 865..944,
                            },
                        ],
                        span: 865..944,
                    },
                    span: 859..945,
                },
                span: 838..945,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "UnionBlock",
                    span: 952..962,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'{'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 969..973,
                                                },
                                                span: 969..973,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "UnionBranch",
                                                            span: 973..984,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 973..985,
                                                },
                                                span: 973..985,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'}'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 986..990,
                                                },
                                                span: 986..990,
                                            },
                                        ],
                                        span: 969..990,
                                    },
                                ],
                                span: 969..990,
                            },
                        ],
                        span: 969..990,
                    },
                    span: 963..991,
                },
                span: 946..991,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "UnionBranch",
                    span: 998..1009,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'|'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1016..1020,
                                                },
                                                span: 1016..1020,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionHard",
                                                            span: 1020..1034,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1020..1035,
                                                },
                                                span: 1020..1035,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "BranchTag",
                                                            span: 1035..1044,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 1035..1045,
                                                },
                                                span: 1035..1045,
                                            },
                                        ],
                                        span: 1016..1045,
                                    },
                                ],
                                span: 1016..1046,
                            },
                        ],
                        span: 1016..1046,
                    },
                    span: 1010..1047,
                },
                span: 992..1047,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "BranchTag",
                    span: 1075..1084,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "field",
                                                                        span: 1055..1060,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 1055..1060,
                                                            },
                                                            span: 1055..1060,
                                                        },
                                                    ],
                                                    span: 1055..1060,
                                                },
                                            ],
                                            span: 1055..1060,
                                        },
                                    ],
                                    span: 1055..1060,
                                },
                            ],
                            span: 1054..1061,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 1049..1054,
                            },
                            span: 1048..1054,
                        },
                        span: 1048..1061,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 1062..1068,
                        },
                        span: 1062..1068,
                    },
                ],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'#'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1091..1095,
                                                },
                                                span: 1091..1095,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1095..1105,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1095..1106,
                                                },
                                                span: 1095..1106,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RightAssociativity",
                                                            span: 1106..1124,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 1106..1125,
                                                },
                                                span: 1106..1125,
                                            },
                                        ],
                                        span: 1091..1125,
                                    },
                                ],
                                span: 1091..1126,
                            },
                        ],
                        span: 1091..1126,
                    },
                    span: 1085..1127,
                },
                span: 1048..1127,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "RightAssociativity",
                    span: 1134..1152,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'>'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1159..1163,
                                                },
                                                span: 1159..1163,
                                            },
                                        ],
                                        span: 1159..1163,
                                    },
                                ],
                                span: 1159..1163,
                            },
                        ],
                        span: 1159..1163,
                    },
                    span: 1153..1164,
                },
                span: 1128..1164,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "GroupStatement",
                    span: 1292..1306,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorCall",
                                                            span: 1313..1326,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 1313..1327,
                                                },
                                                span: 1313..1327,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ModifierCall",
                                                            span: 1328..1340,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 1328..1341,
                                                },
                                                span: 1328..1341,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_GROUP",
                                                            span: 1343..1351,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Prefix2,
                                                    ],
                                                    suffix: [],
                                                    span: 1342..1352,
                                                },
                                                span: 1342..1352,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1352..1362,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 1352..1363,
                                                },
                                                span: 1352..1363,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupBlock",
                                                            span: 1364..1374,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1364..1375,
                                                },
                                                span: 1364..1375,
                                            },
                                        ],
                                        span: 1313..1375,
                                    },
                                ],
                                span: 1313..1375,
                            },
                        ],
                        span: 1313..1375,
                    },
                    span: 1307..1376,
                },
                span: 1286..1376,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "GroupBlock",
                    span: 1383..1393,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'{'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1400..1404,
                                                },
                                                span: 1400..1404,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupPair",
                                                            span: 1404..1413,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 1404..1414,
                                                },
                                                span: 1404..1414,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'}'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1415..1419,
                                                },
                                                span: 1415..1419,
                                            },
                                        ],
                                        span: 1400..1419,
                                    },
                                ],
                                span: 1400..1419,
                            },
                        ],
                        span: 1400..1419,
                    },
                    span: 1394..1420,
                },
                span: 1377..1420,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "GroupPair",
                    span: 1427..1436,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1443..1453,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1443..1454,
                                                },
                                                span: 1443..1454,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "':'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1454..1458,
                                                },
                                                span: 1454..1458,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Atomic",
                                                            span: 1458..1464,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1458..1465,
                                                },
                                                span: 1458..1465,
                                            },
                                        ],
                                        span: 1443..1465,
                                    },
                                ],
                                span: 1443..1465,
                            },
                        ],
                        span: 1443..1465,
                    },
                    span: 1437..1466,
                },
                span: 1421..1466,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "DecoratorCall",
                    span: 1593..1606,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorName",
                                                            span: 1613..1626,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1613..1627,
                                                },
                                                span: 1613..1627,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "CallBody",
                                                            span: 1627..1635,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1627..1636,
                                                },
                                                span: 1627..1636,
                                            },
                                        ],
                                        span: 1613..1636,
                                    },
                                ],
                                span: 1613..1636,
                            },
                        ],
                        span: 1613..1636,
                    },
                    span: 1607..1637,
                },
                span: 1587..1637,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "DecoratorName",
                    span: 1663..1676,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "annotation",
                                                                        span: 1645..1655,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 1645..1655,
                                                            },
                                                            span: 1645..1655,
                                                        },
                                                    ],
                                                    span: 1645..1655,
                                                },
                                            ],
                                            span: 1645..1655,
                                        },
                                    ],
                                    span: 1645..1655,
                                },
                            ],
                            span: 1644..1656,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 1639..1644,
                            },
                            span: 1638..1644,
                        },
                        span: 1638..1656,
                    },
                ],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexRange(
                                                        RegexRangeNode {
                                                            text: "[@#]",
                                                            regex_negative: None,
                                                            span: 1683..1687,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1683..1688,
                                                },
                                                span: 1683..1688,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1688..1698,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1688..1699,
                                                },
                                                span: 1688..1699,
                                            },
                                        ],
                                        span: 1683..1699,
                                    },
                                ],
                                span: 1683..1699,
                            },
                        ],
                        span: 1683..1699,
                    },
                    span: 1677..1700,
                },
                span: 1638..1700,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "FunctionCall",
                    span: 1707..1719,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "FunctionName",
                                                            span: 1726..1738,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1726..1739,
                                                },
                                                span: 1726..1739,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "CallBody",
                                                            span: 1739..1747,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1739..1748,
                                                },
                                                span: 1739..1748,
                                            },
                                        ],
                                        span: 1726..1748,
                                    },
                                ],
                                span: 1726..1748,
                            },
                        ],
                        span: 1726..1748,
                    },
                    span: 1720..1749,
                },
                span: 1701..1749,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "FunctionName",
                    span: 1773..1785,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "function",
                                                                        span: 1757..1765,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 1757..1765,
                                                            },
                                                            span: 1757..1765,
                                                        },
                                                    ],
                                                    span: 1757..1765,
                                                },
                                            ],
                                            span: 1757..1765,
                                        },
                                    ],
                                    span: 1757..1765,
                                },
                            ],
                            span: 1756..1766,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 1751..1756,
                            },
                            span: 1750..1756,
                        },
                        span: 1750..1766,
                    },
                ],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexRange(
                                                        RegexRangeNode {
                                                            text: "[@]",
                                                            regex_negative: None,
                                                            span: 1792..1795,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1792..1796,
                                                },
                                                span: 1792..1796,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1796..1806,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1796..1807,
                                                },
                                                span: 1796..1807,
                                            },
                                        ],
                                        span: 1792..1807,
                                    },
                                ],
                                span: 1792..1807,
                            },
                        ],
                        span: 1792..1807,
                    },
                    span: 1786..1808,
                },
                span: 1750..1808,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "CallBody",
                    span: 1815..1823,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'('",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1830..1834,
                                                },
                                                span: 1830..1834,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Expression",
                                                                                                    span: 1835..1845,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 1835..1846,
                                                                                        },
                                                                                        span: 1835..1846,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: GroupExpression(
                                                                                                GroupExpressionNode {
                                                                                                    expression: ExpressionNode {
                                                                                                        expression_hard: [
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: String(
                                                                                                                                        String0(
                                                                                                                                            "','",
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 1847..1851,
                                                                                                                                },
                                                                                                                                span: 1847..1851,
                                                                                                                            },
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: Identifier(
                                                                                                                                        IdentifierNode {
                                                                                                                                            text: "Expression",
                                                                                                                                            span: 1851..1861,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 1851..1861,
                                                                                                                                },
                                                                                                                                span: 1851..1861,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 1847..1861,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 1847..1861,
                                                                                                            },
                                                                                                        ],
                                                                                                        span: 1847..1861,
                                                                                                    },
                                                                                                    span: 1846..1862,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [
                                                                                                Suffix1,
                                                                                            ],
                                                                                            span: 1846..1863,
                                                                                        },
                                                                                        span: 1846..1863,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: String(
                                                                                                String0(
                                                                                                    "','",
                                                                                                ),
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [
                                                                                                Suffix0,
                                                                                            ],
                                                                                            span: 1864..1868,
                                                                                        },
                                                                                        span: 1864..1868,
                                                                                    },
                                                                                ],
                                                                                span: 1835..1868,
                                                                            },
                                                                        ],
                                                                        span: 1835..1868,
                                                                    },
                                                                ],
                                                                span: 1835..1868,
                                                            },
                                                            span: 1834..1869,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 1834..1870,
                                                },
                                                span: 1834..1870,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "')'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1871..1875,
                                                },
                                                span: 1871..1875,
                                            },
                                        ],
                                        span: 1830..1875,
                                    },
                                ],
                                span: 1830..1875,
                            },
                        ],
                        span: 1830..1875,
                    },
                    span: 1824..1876,
                },
                span: 1809..1876,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "Expression",
                    span: 2004..2014,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionHard",
                                                            span: 2021..2035,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2021..2036,
                                                },
                                                span: 2021..2036,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: String(
                                                                                                String0(
                                                                                                    "'|'",
                                                                                                ),
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2037..2041,
                                                                                        },
                                                                                        span: 2037..2041,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ExpressionHard",
                                                                                                    span: 2041..2055,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2041..2055,
                                                                                        },
                                                                                        span: 2041..2055,
                                                                                    },
                                                                                ],
                                                                                span: 2037..2055,
                                                                            },
                                                                        ],
                                                                        span: 2037..2055,
                                                                    },
                                                                ],
                                                                span: 2037..2055,
                                                            },
                                                            span: 2036..2056,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 2036..2057,
                                                },
                                                span: 2036..2057,
                                            },
                                        ],
                                        span: 2021..2057,
                                    },
                                ],
                                span: 2021..2058,
                            },
                        ],
                        span: 2021..2058,
                    },
                    span: 2019..2059,
                },
                span: 1998..2059,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "ExpressionHard",
                    span: 2066..2080,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionSoft",
                                                            span: 2083..2097,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2083..2098,
                                                },
                                                span: 2083..2098,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: String(
                                                                                                String0(
                                                                                                    "'~'",
                                                                                                ),
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2099..2103,
                                                                                        },
                                                                                        span: 2099..2103,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ExpressionSoft",
                                                                                                    span: 2103..2117,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2103..2117,
                                                                                        },
                                                                                        span: 2103..2117,
                                                                                    },
                                                                                ],
                                                                                span: 2099..2117,
                                                                            },
                                                                        ],
                                                                        span: 2099..2117,
                                                                    },
                                                                ],
                                                                span: 2099..2117,
                                                            },
                                                            span: 2098..2118,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 2098..2119,
                                                },
                                                span: 2098..2119,
                                            },
                                        ],
                                        span: 2083..2119,
                                    },
                                ],
                                span: 2083..2120,
                            },
                        ],
                        span: 2083..2120,
                    },
                    span: 2081..2121,
                },
                span: 2060..2121,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "ExpressionSoft",
                    span: 2128..2142,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionTag",
                                                            span: 2145..2158,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2145..2159,
                                                },
                                                span: 2145..2159,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionTag",
                                                            span: 2159..2172,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 2159..2173,
                                                },
                                                span: 2159..2173,
                                            },
                                        ],
                                        span: 2145..2173,
                                    },
                                ],
                                span: 2145..2174,
                            },
                        ],
                        span: 2145..2174,
                    },
                    span: 2143..2175,
                },
                span: 2122..2175,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "ExpressionTag",
                    span: 2182..2195,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 2200..2210,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2200..2211,
                                                                                        },
                                                                                        span: 2200..2211,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: String(
                                                                                                String0(
                                                                                                    "':'",
                                                                                                ),
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2211..2214,
                                                                                        },
                                                                                        span: 2211..2214,
                                                                                    },
                                                                                ],
                                                                                span: 2200..2214,
                                                                            },
                                                                        ],
                                                                        span: 2200..2214,
                                                                    },
                                                                ],
                                                                span: 2200..2214,
                                                            },
                                                            span: 2199..2215,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 2199..2216,
                                                },
                                                span: 2199..2216,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Term",
                                                            span: 2217..2221,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2217..2222,
                                                },
                                                span: 2217..2222,
                                            },
                                        ],
                                        span: 2199..2222,
                                    },
                                ],
                                span: 2199..2222,
                            },
                        ],
                        span: 2199..2222,
                    },
                    span: 2197..2223,
                },
                span: 2176..2223,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "Term",
                    span: 2230..2234,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Prefix",
                                                            span: 2241..2247,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 2241..2248,
                                                },
                                                span: 2241..2248,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Atomic",
                                                            span: 2249..2255,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2249..2256,
                                                },
                                                span: 2249..2256,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Suffix",
                                                            span: 2256..2262,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 2256..2263,
                                                },
                                                span: 2256..2263,
                                            },
                                        ],
                                        span: 2241..2263,
                                    },
                                ],
                                span: 2241..2264,
                            },
                        ],
                        span: 2241..2264,
                    },
                    span: 2235..2265,
                },
                span: 2224..2265,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Negative",
                                        span: 2292..2300,
                                    },
                                    right_associativity: None,
                                    span: 2291..2300,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'!'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2287..2291,
                                                },
                                                span: 2287..2291,
                                            },
                                        ],
                                        span: 2287..2291,
                                    },
                                ],
                                span: 2287..2291,
                            },
                            span: 2285..2300,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Positive",
                                        span: 2312..2320,
                                    },
                                    right_associativity: None,
                                    span: 2311..2320,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'&'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2307..2311,
                                                },
                                                span: 2307..2311,
                                            },
                                        ],
                                        span: 2307..2311,
                                    },
                                ],
                                span: 2307..2311,
                            },
                            span: 2305..2320,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Remark",
                                        span: 2332..2338,
                                    },
                                    right_associativity: None,
                                    span: 2331..2338,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'^'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2327..2331,
                                                },
                                                span: 2327..2331,
                                            },
                                        ],
                                        span: 2327..2331,
                                    },
                                ],
                                span: 2327..2331,
                            },
                            span: 2325..2338,
                        },
                    ],
                    span: 2279..2340,
                },
                name: IdentifierNode {
                    text: "Prefix",
                    span: 2272..2278,
                },
                span: 2266..2340,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Optional",
                                        span: 2367..2375,
                                    },
                                    right_associativity: None,
                                    span: 2366..2375,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'?'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2362..2366,
                                                },
                                                span: 2362..2366,
                                            },
                                        ],
                                        span: 2362..2366,
                                    },
                                ],
                                span: 2362..2366,
                            },
                            span: 2360..2375,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Many",
                                        span: 2387..2391,
                                    },
                                    right_associativity: None,
                                    span: 2386..2391,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'*'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2382..2386,
                                                },
                                                span: 2382..2386,
                                            },
                                        ],
                                        span: 2382..2386,
                                    },
                                ],
                                span: 2382..2386,
                            },
                            span: 2380..2391,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Many1",
                                        span: 2403..2408,
                                    },
                                    right_associativity: None,
                                    span: 2402..2408,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'+'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2398..2402,
                                                },
                                                span: 2398..2402,
                                            },
                                        ],
                                        span: 2398..2402,
                                    },
                                ],
                                span: 2398..2402,
                            },
                            span: 2396..2408,
                        },
                    ],
                    span: 2354..2410,
                },
                name: IdentifierNode {
                    text: "Suffix",
                    span: 2347..2353,
                },
                span: 2341..2410,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupExpression",
                                                            span: 2553..2568,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2553..2573,
                                                },
                                                span: 2553..2573,
                                            },
                                        ],
                                        span: 2553..2573,
                                    },
                                ],
                                span: 2553..2573,
                            },
                            span: 2551..2573,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "FunctionCall",
                                                            span: 2575..2587,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2575..2592,
                                                },
                                                span: 2575..2592,
                                            },
                                        ],
                                        span: 2575..2592,
                                    },
                                ],
                                span: 2575..2592,
                            },
                            span: 2573..2592,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Boolean",
                                                            span: 2594..2601,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2594..2606,
                                                },
                                                span: 2594..2606,
                                            },
                                        ],
                                        span: 2594..2606,
                                    },
                                ],
                                span: 2594..2606,
                            },
                            span: 2592..2606,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "String",
                                                            span: 2608..2614,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2608..2619,
                                                },
                                                span: 2608..2619,
                                            },
                                        ],
                                        span: 2608..2619,
                                    },
                                ],
                                span: 2608..2619,
                            },
                            span: 2606..2619,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexEmbed",
                                                            span: 2621..2631,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2621..2636,
                                                },
                                                span: 2621..2636,
                                            },
                                        ],
                                        span: 2621..2636,
                                    },
                                ],
                                span: 2621..2636,
                            },
                            span: 2619..2636,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexRange",
                                                            span: 2638..2648,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2638..2653,
                                                },
                                                span: 2638..2653,
                                            },
                                        ],
                                        span: 2638..2653,
                                    },
                                ],
                                span: 2638..2653,
                            },
                            span: 2636..2653,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 2655..2665,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2655..2666,
                                                },
                                                span: 2655..2666,
                                            },
                                        ],
                                        span: 2655..2666,
                                    },
                                ],
                                span: 2655..2666,
                            },
                            span: 2653..2666,
                        },
                    ],
                    span: 2545..2667,
                },
                name: IdentifierNode {
                    text: "Atomic",
                    span: 2538..2544,
                },
                span: 2532..2667,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "GroupExpression",
                    span: 2674..2689,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'('",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2696..2700,
                                                },
                                                span: 2696..2700,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'|'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 2700..2704,
                                                },
                                                span: 2700..2704,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Expression",
                                                            span: 2705..2715,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2705..2716,
                                                },
                                                span: 2705..2716,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "')'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2716..2720,
                                                },
                                                span: 2716..2720,
                                            },
                                        ],
                                        span: 2696..2720,
                                    },
                                ],
                                span: 2696..2720,
                            },
                        ],
                        span: 2696..2720,
                    },
                    span: 2690..2721,
                },
                span: 2668..2721,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 2844..2850,
                        },
                        span: 2844..2850,
                    },
                ],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Raw",
                                        span: 2891..2894,
                                    },
                                    right_associativity: None,
                                    span: 2890..2894,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String1(
                                                            "\"'\"",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2872..2876,
                                                },
                                                span: 2872..2876,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RawString",
                                                            span: 2876..2885,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2876..2886,
                                                },
                                                span: 2876..2886,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String1(
                                                            "\"'\"",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2886..2890,
                                                },
                                                span: 2886..2890,
                                            },
                                        ],
                                        span: 2872..2890,
                                    },
                                ],
                                span: 2872..2890,
                            },
                            span: 2870..2894,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Escaped",
                                        span: 2924..2931,
                                    },
                                    right_associativity: None,
                                    span: 2923..2931,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'\"'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2901..2905,
                                                },
                                                span: 2901..2905,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringEscaped",
                                                            span: 2905..2918,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2905..2919,
                                                },
                                                span: 2905..2919,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'\"'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2919..2923,
                                                },
                                                span: 2919..2923,
                                            },
                                        ],
                                        span: 2901..2923,
                                    },
                                ],
                                span: 2901..2923,
                            },
                            span: 2899..2931,
                        },
                    ],
                    span: 2864..2933,
                },
                name: IdentifierNode {
                    text: "String",
                    span: 2857..2863,
                },
                span: 2844..2933,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "StringRaw",
                    span: 2952..2961,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 2934..2938,
                        },
                        span: 2934..2938,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 2939..2945,
                        },
                        span: 2939..2945,
                    },
                ],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: String(
                                                                                                String1(
                                                                                                    "\"'\"",
                                                                                                ),
                                                                                            ),
                                                                                            prefix: [
                                                                                                Prefix0,
                                                                                            ],
                                                                                            suffix: [],
                                                                                            span: 2969..2974,
                                                                                        },
                                                                                        span: 2969..2974,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ANY",
                                                                                                    span: 2974..2977,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2974..2977,
                                                                                        },
                                                                                        span: 2974..2977,
                                                                                    },
                                                                                ],
                                                                                span: 2969..2977,
                                                                            },
                                                                        ],
                                                                        span: 2969..2977,
                                                                    },
                                                                ],
                                                                span: 2969..2977,
                                                            },
                                                            span: 2968..2978,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 2968..2979,
                                                },
                                                span: 2968..2979,
                                            },
                                        ],
                                        span: 2968..2980,
                                    },
                                ],
                                span: 2968..2980,
                            },
                        ],
                        span: 2968..2980,
                    },
                    span: 2962..2981,
                },
                span: 2934..2981,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "StringEscaped",
                    span: 3000..3013,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 2982..2986,
                        },
                        span: 2982..2986,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 2987..2993,
                        },
                        span: 2987..2993,
                    },
                ],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: String(
                                                                                                String0(
                                                                                                    "'\"'",
                                                                                                ),
                                                                                            ),
                                                                                            prefix: [
                                                                                                Prefix0,
                                                                                            ],
                                                                                            suffix: [],
                                                                                            span: 3021..3026,
                                                                                        },
                                                                                        span: 3021..3026,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ANY",
                                                                                                    span: 3026..3029,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3026..3029,
                                                                                        },
                                                                                        span: 3026..3029,
                                                                                    },
                                                                                ],
                                                                                span: 3021..3029,
                                                                            },
                                                                        ],
                                                                        span: 3021..3029,
                                                                    },
                                                                ],
                                                                span: 3021..3029,
                                                            },
                                                            span: 3020..3030,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 3020..3031,
                                                },
                                                span: 3020..3031,
                                            },
                                        ],
                                        span: 3020..3032,
                                    },
                                ],
                                span: 3020..3032,
                            },
                        ],
                        span: 3020..3032,
                    },
                    span: 3014..3033,
                },
                span: 2982..3033,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "RegexEmbed",
                    span: 3173..3183,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3155..3159,
                        },
                        span: 3155..3159,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3160..3166,
                        },
                        span: 3160..3166,
                    },
                ],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'/'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3190..3194,
                                                },
                                                span: 3190..3194,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: String(
                                                                                                String0(
                                                                                                    "'/'",
                                                                                                ),
                                                                                            ),
                                                                                            prefix: [
                                                                                                Prefix0,
                                                                                            ],
                                                                                            suffix: [],
                                                                                            span: 3195..3200,
                                                                                        },
                                                                                        span: 3195..3200,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ANY",
                                                                                                    span: 3200..3203,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3200..3203,
                                                                                        },
                                                                                        span: 3200..3203,
                                                                                    },
                                                                                ],
                                                                                span: 3195..3203,
                                                                            },
                                                                        ],
                                                                        span: 3195..3203,
                                                                    },
                                                                ],
                                                                span: 3195..3203,
                                                            },
                                                            span: 3194..3204,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 3194..3205,
                                                },
                                                span: 3194..3205,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'/'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3206..3210,
                                                },
                                                span: 3206..3210,
                                            },
                                        ],
                                        span: 3190..3210,
                                    },
                                ],
                                span: 3190..3210,
                            },
                        ],
                        span: 3190..3210,
                    },
                    span: 3184..3211,
                },
                span: 3155..3211,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "RegexRange",
                    span: 3230..3240,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3212..3216,
                        },
                        span: 3212..3216,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3217..3223,
                        },
                        span: 3217..3223,
                    },
                ],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'['",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3247..3251,
                                                },
                                                span: 3247..3251,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexNegative",
                                                            span: 3251..3264,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix0,
                                                    ],
                                                    span: 3251..3265,
                                                },
                                                span: 3251..3265,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: String(
                                                                                                String0(
                                                                                                    "']'",
                                                                                                ),
                                                                                            ),
                                                                                            prefix: [
                                                                                                Prefix0,
                                                                                            ],
                                                                                            suffix: [],
                                                                                            span: 3267..3272,
                                                                                        },
                                                                                        span: 3267..3272,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ANY",
                                                                                                    span: 3272..3275,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3272..3275,
                                                                                        },
                                                                                        span: 3272..3275,
                                                                                    },
                                                                                ],
                                                                                span: 3267..3275,
                                                                            },
                                                                        ],
                                                                        span: 3267..3275,
                                                                    },
                                                                ],
                                                                span: 3267..3275,
                                                            },
                                                            span: 3266..3276,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 3266..3277,
                                                },
                                                span: 3266..3277,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "']'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3278..3282,
                                                },
                                                span: 3278..3282,
                                            },
                                        ],
                                        span: 3247..3282,
                                    },
                                ],
                                span: 3247..3282,
                            },
                        ],
                        span: 3247..3282,
                    },
                    span: 3241..3283,
                },
                span: 3212..3283,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "RegexNegative",
                    span: 3290..3303,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'^'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3310..3314,
                                                },
                                                span: 3310..3314,
                                            },
                                        ],
                                        span: 3310..3314,
                                    },
                                ],
                                span: 3310..3314,
                            },
                        ],
                        span: 3310..3314,
                    },
                    span: 3304..3315,
                },
                span: 3284..3315,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "NamepathFree",
                    span: 3443..3455,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: Some(
                    IdentifierNode {
                        text: "Namepath",
                        span: 3459..3467,
                    },
                ),
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 3474..3484,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3474..3485,
                                                },
                                                span: 3474..3485,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: GroupExpression(
                                                                                                GroupExpressionNode {
                                                                                                    expression: ExpressionNode {
                                                                                                        expression_hard: [
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: String(
                                                                                                                                        String0(
                                                                                                                                            "'.'",
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 3487..3491,
                                                                                                                                },
                                                                                                                                span: 3487..3491,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 3487..3491,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 3487..3491,
                                                                                                            },
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: String(
                                                                                                                                        String0(
                                                                                                                                            "'::'",
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 3493..3497,
                                                                                                                                },
                                                                                                                                span: 3493..3497,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 3493..3497,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 3493..3497,
                                                                                                            },
                                                                                                        ],
                                                                                                        span: 3487..3497,
                                                                                                    },
                                                                                                    span: 3486..3498,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3486..3499,
                                                                                        },
                                                                                        span: 3486..3499,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 3499..3509,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3499..3509,
                                                                                        },
                                                                                        span: 3499..3509,
                                                                                    },
                                                                                ],
                                                                                span: 3486..3509,
                                                                            },
                                                                        ],
                                                                        span: 3486..3509,
                                                                    },
                                                                ],
                                                                span: 3486..3509,
                                                            },
                                                            span: 3485..3510,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 3485..3511,
                                                },
                                                span: 3485..3511,
                                            },
                                        ],
                                        span: 3474..3511,
                                    },
                                ],
                                span: 3474..3512,
                            },
                        ],
                        span: 3474..3512,
                    },
                    span: 3468..3513,
                },
                span: 3437..3513,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "Namepath",
                    span: 3520..3528,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 3535..3545,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3535..3546,
                                                },
                                                span: 3535..3546,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: String(
                                                                                                String0(
                                                                                                    "'::'",
                                                                                                ),
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3547..3552,
                                                                                        },
                                                                                        span: 3547..3552,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 3552..3562,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3552..3562,
                                                                                        },
                                                                                        span: 3552..3562,
                                                                                    },
                                                                                ],
                                                                                span: 3547..3562,
                                                                            },
                                                                        ],
                                                                        span: 3547..3562,
                                                                    },
                                                                ],
                                                                span: 3547..3562,
                                                            },
                                                            span: 3546..3563,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Suffix1,
                                                    ],
                                                    span: 3546..3564,
                                                },
                                                span: 3546..3564,
                                            },
                                        ],
                                        span: 3535..3564,
                                    },
                                ],
                                span: 3535..3565,
                            },
                        ],
                        span: 3535..3565,
                    },
                    span: 3529..3566,
                },
                span: 3514..3566,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "Identifier",
                    span: 3578..3588,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3567..3571,
                        },
                        span: 3567..3571,
                    },
                ],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            text: "/[_\\p{XID_start}]\\p{XID_continue}*/",
                                                            span: 3595..3630,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3595..3631,
                                                },
                                                span: 3595..3631,
                                            },
                                        ],
                                        span: 3595..3631,
                                    },
                                ],
                                span: 3595..3631,
                            },
                        ],
                        span: 3595..3631,
                    },
                    span: 3589..3632,
                },
                span: 3567..3632,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "True",
                                        span: 3664..3668,
                                    },
                                    right_associativity: None,
                                    span: 3663..3668,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'true'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3655..3663,
                                                },
                                                span: 3655..3663,
                                            },
                                        ],
                                        span: 3655..3663,
                                    },
                                ],
                                span: 3655..3663,
                            },
                            span: 3653..3668,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "False",
                                        span: 3684..3689,
                                    },
                                    right_associativity: None,
                                    span: 3683..3689,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: String(
                                                        String0(
                                                            "'false'",
                                                        ),
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3675..3683,
                                                },
                                                span: 3675..3683,
                                            },
                                        ],
                                        span: 3675..3683,
                                    },
                                ],
                                span: 3675..3683,
                            },
                            span: 3673..3689,
                        },
                    ],
                    span: 3647..3691,
                },
                name: IdentifierNode {
                    text: "Boolean",
                    span: 3639..3646,
                },
                span: 3633..3691,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "ModifierCall",
                    span: 3826..3838,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3813..3819,
                        },
                        span: 3813..3819,
                    },
                ],
                op_remark: Some(
                    OpRemarkNode {
                        span: 3839..3840,
                    },
                ),
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_CLASS",
                                                                                                    span: 3849..3857,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3849..3858,
                                                                                        },
                                                                                        span: 3849..3858,
                                                                                    },
                                                                                ],
                                                                                span: 3849..3858,
                                                                            },
                                                                        ],
                                                                        span: 3849..3858,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_UNION",
                                                                                                    span: 3860..3868,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3860..3869,
                                                                                        },
                                                                                        span: 3860..3869,
                                                                                    },
                                                                                ],
                                                                                span: 3860..3869,
                                                                            },
                                                                        ],
                                                                        span: 3860..3869,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_GROUP",
                                                                                                    span: 3871..3879,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3871..3880,
                                                                                        },
                                                                                        span: 3871..3880,
                                                                                    },
                                                                                ],
                                                                                span: 3871..3880,
                                                                            },
                                                                        ],
                                                                        span: 3871..3880,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_MACRO",
                                                                                                    span: 3882..3890,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3882..3891,
                                                                                        },
                                                                                        span: 3882..3891,
                                                                                    },
                                                                                ],
                                                                                span: 3882..3891,
                                                                            },
                                                                        ],
                                                                        span: 3882..3891,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_CLIMB",
                                                                                                    span: 3893..3901,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 3893..3901,
                                                                                        },
                                                                                        span: 3893..3901,
                                                                                    },
                                                                                ],
                                                                                span: 3893..3901,
                                                                            },
                                                                        ],
                                                                        span: 3893..3901,
                                                                    },
                                                                ],
                                                                span: 3849..3901,
                                                            },
                                                            span: 3848..3902,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Prefix0,
                                                    ],
                                                    suffix: [],
                                                    span: 3847..3903,
                                                },
                                                span: 3847..3903,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 3904..3914,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Prefix2,
                                                    ],
                                                    suffix: [],
                                                    span: 3903..3915,
                                                },
                                                span: 3903..3915,
                                            },
                                        ],
                                        span: 3847..3915,
                                    },
                                ],
                                span: 3847..3915,
                            },
                        ],
                        span: 3847..3915,
                    },
                    span: 3841..3916,
                },
                span: 3813..3916,
            },
        ),
        GroupStatement(
            GroupStatementNode {
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "keyword",
                                                                        span: 3924..3931,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 3924..3931,
                                                            },
                                                            span: 3924..3931,
                                                        },
                                                    ],
                                                    span: 3924..3931,
                                                },
                                            ],
                                            span: 3924..3931,
                                        },
                                    ],
                                    span: 3924..3931,
                                },
                            ],
                            span: 3923..3932,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 3918..3923,
                            },
                            span: 3917..3923,
                        },
                        span: 3917..3932,
                    },
                ],
                group_block: GroupBlockNode {
                    group_pair: [
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    text: "/grammar/",
                                    span: 3957..3966,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_GRAMMAR",
                                span: 3945..3955,
                            },
                            span: 3945..3966,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    text: "/using|import|use/",
                                    span: 3982..4000,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_IMPORT",
                                span: 3971..3980,
                            },
                            span: 3971..4000,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    text: "/class|struct/",
                                    span: 4015..4029,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_CLASS",
                                span: 4005..4013,
                            },
                            span: 4005..4029,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    text: "/union|enum/",
                                    span: 4044..4056,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_UNION",
                                span: 4034..4042,
                            },
                            span: 4034..4056,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    text: "/group|token/",
                                    span: 4071..4084,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_GROUP",
                                span: 4061..4069,
                            },
                            span: 4061..4084,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    text: "/climb/",
                                    span: 4099..4106,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_CLIMB",
                                span: 4089..4097,
                            },
                            span: 4089..4106,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    text: "/macro|def|function|func|fun|fn/",
                                    span: 4121..4153,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_MACRO",
                                span: 4111..4119,
                            },
                            span: 4111..4153,
                        },
                    ],
                    span: 3939..4155,
                },
                identifier: None,
                modifier_call: [],
                span: 3917..4155,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                name: IdentifierNode {
                    text: "WhiteSpace",
                    span: 4297..4307,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 4277..4283,
                        },
                        span: 4277..4283,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "ignore",
                            span: 4284..4290,
                        },
                        span: 4284..4290,
                    },
                ],
                op_remark: None,
                cast: None,
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            text: "/\\p{White_Space}+/",
                                                            span: 4314..4332,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4314..4333,
                                                },
                                                span: 4314..4333,
                                            },
                                        ],
                                        span: 4314..4333,
                                    },
                                ],
                                span: 4314..4333,
                            },
                        ],
                        span: 4314..4333,
                    },
                    span: 4308..4334,
                },
                span: 4277..4334,
            },
        ),
    ],
    span: 0..4334,
}