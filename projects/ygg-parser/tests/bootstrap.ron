RootNode {
    statement: [
        GrammarStatement(
            GrammarStatementNode {
                grammar_block: GrammarBlockNode {
                    span: 18..22,
                },
                identifier: IdentifierNode {
                    text: "Bootstrap",
                    span: 8..17,
                },
                span: 0..22,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Statement",
                                                                span: 47..56,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 47..57,
                                                    },
                                                ],
                                                span: 47..58,
                                            },
                                        ],
                                        span: 47..58,
                                    },
                                ],
                                span: 47..58,
                            },
                        ],
                        text: "Statement*\n",
                        span: 47..58,
                    },
                    span: 41..59,
                },
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "entry",
                            span: 24..29,
                        },
                        span: 24..29,
                    },
                ],
                cast: None,
                name: IdentifierNode {
                    text: "Root",
                    span: 36..40,
                },
                span: 24..59,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                annotation_call: [],
                modifier_call: [],
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression: ExpressionNode {
                                expression_hard: [
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "GrammarStatement",
                                                                        span: 85..101,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 85..106,
                                                            },
                                                        ],
                                                        span: 85..106,
                                                    },
                                                ],
                                                span: 85..106,
                                            },
                                        ],
                                        span: 85..106,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "ClassStatement",
                                                                        span: 108..122,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 108..127,
                                                            },
                                                        ],
                                                        span: 108..127,
                                                    },
                                                ],
                                                span: 108..127,
                                            },
                                        ],
                                        span: 108..127,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "UnionStatement",
                                                                        span: 129..143,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 129..148,
                                                            },
                                                        ],
                                                        span: 129..148,
                                                    },
                                                ],
                                                span: 129..148,
                                            },
                                        ],
                                        span: 129..148,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "GroupStatement",
                                                                        span: 150..164,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 150..165,
                                                            },
                                                        ],
                                                        span: 150..165,
                                                    },
                                                ],
                                                span: 150..165,
                                            },
                                        ],
                                        span: 150..165,
                                    },
                                ],
                                text: "GrammarStatement\n    | ClassStatement\n    | UnionStatement\n    | GroupStatement\n",
                                span: 85..165,
                            },
                            span: 83..165,
                        },
                    ],
                    span: 77..166,
                },
                name: IdentifierNode {
                    text: "Statement",
                    span: 67..76,
                },
                span: 61..166,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "KW_GRAMMAR",
                                                                span: 318..328,
                                                            },
                                                        ),
                                                        prefix: [
                                                            Prefix2,
                                                        ],
                                                        suffix: [],
                                                        span: 317..329,
                                                    },
                                                ],
                                                span: 317..329,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Identifier",
                                                                span: 329..339,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 329..340,
                                                    },
                                                ],
                                                span: 329..340,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "GrammarBlock",
                                                                span: 340..352,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 340..353,
                                                    },
                                                ],
                                                span: 340..353,
                                            },
                                        ],
                                        span: 317..353,
                                    },
                                ],
                                span: 317..353,
                            },
                        ],
                        text: "^KW_GRAMMAR Identifier GrammarBlock\n",
                        span: 317..353,
                    },
                    span: 311..354,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "GrammarStatement",
                    span: 294..310,
                },
                span: 288..354,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'{'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 380..384,
                                                    },
                                                ],
                                                span: 380..384,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'}'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 384..388,
                                                    },
                                                ],
                                                span: 384..388,
                                            },
                                        ],
                                        span: 380..388,
                                    },
                                ],
                                span: 380..388,
                            },
                        ],
                        text: "'{' '}'\n",
                        span: 380..388,
                    },
                    span: 374..389,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "GrammarBlock",
                    span: 361..373,
                },
                span: 355..389,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "AnnotationCall",
                                                                span: 536..550,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 536..551,
                                                    },
                                                ],
                                                span: 536..552,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "ModifierCall",
                                                                span: 552..564,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 552..565,
                                                    },
                                                ],
                                                span: 552..566,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "KW_CLASS",
                                                                span: 567..575,
                                                            },
                                                        ),
                                                        prefix: [
                                                            Prefix2,
                                                        ],
                                                        suffix: [],
                                                        span: 566..576,
                                                    },
                                                ],
                                                span: 566..576,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "name",
                                                                                                        span: 577..581,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 577..581,
                                                                                            },
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "Identifier",
                                                                                                        span: 582..592,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 582..592,
                                                                                            },
                                                                                        ],
                                                                                        span: 577..592,
                                                                                    },
                                                                                ],
                                                                                span: 577..592,
                                                                            },
                                                                        ],
                                                                        span: 577..592,
                                                                    },
                                                                ],
                                                                text: "name:Identifier",
                                                                span: 577..592,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 576..594,
                                                    },
                                                ],
                                                span: 576..594,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: String(
                                                                                                    String0(
                                                                                                        "'->'",
                                                                                                    ),
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 595..600,
                                                                                            },
                                                                                        ],
                                                                                        span: 595..600,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "cast",
                                                                                                        span: 600..604,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 600..604,
                                                                                            },
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "Identifier",
                                                                                                        span: 605..615,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 605..615,
                                                                                            },
                                                                                        ],
                                                                                        span: 600..615,
                                                                                    },
                                                                                ],
                                                                                span: 595..615,
                                                                            },
                                                                        ],
                                                                        span: 595..615,
                                                                    },
                                                                ],
                                                                text: "'->' cast:Identifier",
                                                                span: 595..615,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix0,
                                                        ],
                                                        span: 594..617,
                                                    },
                                                ],
                                                span: 594..618,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "ClassBlock",
                                                                span: 618..628,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 618..629,
                                                    },
                                                ],
                                                span: 618..629,
                                            },
                                        ],
                                        span: 536..629,
                                    },
                                ],
                                span: 536..629,
                            },
                        ],
                        text: "AnnotationCall* ModifierCall* ^KW_CLASS (name:Identifier) ('->' cast:Identifier)? ClassBlock\n",
                        span: 536..629,
                    },
                    span: 530..630,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "ClassStatement",
                    span: 515..529,
                },
                span: 509..630,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'{'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 654..658,
                                                    },
                                                ],
                                                span: 654..658,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'|'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix0,
                                                        ],
                                                        span: 658..662,
                                                    },
                                                ],
                                                span: 658..663,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Expression",
                                                                span: 663..673,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 663..674,
                                                    },
                                                ],
                                                span: 663..674,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'}'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 674..678,
                                                    },
                                                ],
                                                span: 674..678,
                                            },
                                        ],
                                        span: 654..678,
                                    },
                                ],
                                span: 654..678,
                            },
                        ],
                        text: "'{' '|'? Expression '}'\n",
                        span: 654..678,
                    },
                    span: 648..679,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "ClassBlock",
                    span: 637..647,
                },
                span: 631..679,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "AnnotationCall",
                                                                span: 826..840,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 826..841,
                                                    },
                                                ],
                                                span: 826..842,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "ModifierCall",
                                                                span: 842..854,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 842..855,
                                                    },
                                                ],
                                                span: 842..856,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "KW_UNION",
                                                                span: 857..865,
                                                            },
                                                        ),
                                                        prefix: [
                                                            Prefix2,
                                                        ],
                                                        suffix: [],
                                                        span: 856..866,
                                                    },
                                                ],
                                                span: 856..866,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "name",
                                                                                                        span: 867..871,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 867..871,
                                                                                            },
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "Identifier",
                                                                                                        span: 872..882,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 872..882,
                                                                                            },
                                                                                        ],
                                                                                        span: 867..882,
                                                                                    },
                                                                                ],
                                                                                span: 867..882,
                                                                            },
                                                                        ],
                                                                        span: 867..882,
                                                                    },
                                                                ],
                                                                text: "name:Identifier",
                                                                span: 867..882,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 866..884,
                                                    },
                                                ],
                                                span: 866..884,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "UnionBlock",
                                                                span: 884..894,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 884..895,
                                                    },
                                                ],
                                                span: 884..895,
                                            },
                                        ],
                                        span: 826..895,
                                    },
                                ],
                                span: 826..895,
                            },
                        ],
                        text: "AnnotationCall* ModifierCall* ^KW_UNION (name:Identifier) UnionBlock\n",
                        span: 826..895,
                    },
                    span: 820..896,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "UnionStatement",
                    span: 805..819,
                },
                span: 799..896,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'{'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 920..924,
                                                    },
                                                ],
                                                span: 920..924,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "UnionBranch",
                                                                span: 924..935,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 924..936,
                                                    },
                                                ],
                                                span: 924..937,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'}'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 937..941,
                                                    },
                                                ],
                                                span: 937..941,
                                            },
                                        ],
                                        span: 920..941,
                                    },
                                ],
                                span: 920..941,
                            },
                        ],
                        text: "'{' UnionBranch* '}'\n",
                        span: 920..941,
                    },
                    span: 914..942,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "UnionBlock",
                    span: 903..913,
                },
                span: 897..942,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'|'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 967..971,
                                                    },
                                                ],
                                                span: 967..971,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Expression",
                                                                span: 971..981,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 971..982,
                                                    },
                                                ],
                                                span: 971..982,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "BranchTag",
                                                                span: 982..991,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix0,
                                                        ],
                                                        span: 982..992,
                                                    },
                                                ],
                                                span: 982..993,
                                            },
                                        ],
                                        span: 967..993,
                                    },
                                ],
                                span: 967..993,
                            },
                        ],
                        text: "'|' Expression BranchTag?\n",
                        span: 967..993,
                    },
                    span: 961..994,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "UnionBranch",
                    span: 949..960,
                },
                span: 943..994,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [
                    AnnotationCallNode {
                        annotation_name: AnnotationNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 996..1001,
                            },
                            span: 995..1001,
                        },
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            term: [
                                                                TermNode {
                                                                    atomic: Identifier(
                                                                        IdentifierNode {
                                                                            text: "field",
                                                                            span: 1002..1007,
                                                                        },
                                                                    ),
                                                                    prefix: [],
                                                                    suffix: [],
                                                                    span: 1002..1007,
                                                                },
                                                            ],
                                                            span: 1002..1007,
                                                        },
                                                    ],
                                                    span: 1002..1007,
                                                },
                                            ],
                                            span: 1002..1007,
                                        },
                                    ],
                                    text: "field",
                                    span: 1002..1007,
                                },
                            ],
                            span: 1001..1008,
                        },
                        span: 995..1008,
                    },
                ],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'#'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1038..1042,
                                                    },
                                                ],
                                                span: 1038..1042,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Identifier",
                                                                span: 1042..1052,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1042..1053,
                                                    },
                                                ],
                                                span: 1042..1053,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "RightAssociativity",
                                                                span: 1053..1071,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix0,
                                                        ],
                                                        span: 1053..1072,
                                                    },
                                                ],
                                                span: 1053..1073,
                                            },
                                        ],
                                        span: 1038..1073,
                                    },
                                ],
                                span: 1038..1073,
                            },
                        ],
                        text: "'#' Identifier RightAssociativity?\n",
                        span: 1038..1073,
                    },
                    span: 1032..1074,
                },
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 1009..1015,
                        },
                        span: 1009..1015,
                    },
                ],
                cast: None,
                name: IdentifierNode {
                    text: "BranchTag",
                    span: 1022..1031,
                },
                span: 995..1074,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'>'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1106..1110,
                                                    },
                                                ],
                                                span: 1106..1110,
                                            },
                                        ],
                                        span: 1106..1110,
                                    },
                                ],
                                span: 1106..1110,
                            },
                        ],
                        text: "'>'\n",
                        span: 1106..1110,
                    },
                    span: 1100..1111,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "RightAssociativity",
                    span: 1081..1099,
                },
                span: 1075..1111,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "AnnotationCall",
                                                                span: 1260..1274,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 1260..1275,
                                                    },
                                                ],
                                                span: 1260..1276,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "ModifierCall",
                                                                span: 1276..1288,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 1276..1289,
                                                    },
                                                ],
                                                span: 1276..1290,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "KW_GROUP",
                                                                span: 1291..1299,
                                                            },
                                                        ),
                                                        prefix: [
                                                            Prefix2,
                                                        ],
                                                        suffix: [],
                                                        span: 1290..1300,
                                                    },
                                                ],
                                                span: 1290..1300,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Identifier",
                                                                span: 1300..1310,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix0,
                                                        ],
                                                        span: 1300..1311,
                                                    },
                                                ],
                                                span: 1300..1312,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "GroupBlock",
                                                                span: 1312..1322,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1312..1323,
                                                    },
                                                ],
                                                span: 1312..1323,
                                            },
                                        ],
                                        span: 1260..1323,
                                    },
                                ],
                                span: 1260..1323,
                            },
                        ],
                        text: "AnnotationCall* ModifierCall* ^KW_GROUP Identifier? GroupBlock\n",
                        span: 1260..1323,
                    },
                    span: 1254..1324,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "GroupStatement",
                    span: 1239..1253,
                },
                span: 1233..1324,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'{'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1348..1352,
                                                    },
                                                ],
                                                span: 1348..1352,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "GroupPair",
                                                                span: 1352..1361,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 1352..1362,
                                                    },
                                                ],
                                                span: 1352..1363,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'}'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1363..1367,
                                                    },
                                                ],
                                                span: 1363..1367,
                                            },
                                        ],
                                        span: 1348..1367,
                                    },
                                ],
                                span: 1348..1367,
                            },
                        ],
                        text: "'{' GroupPair* '}'\n",
                        span: 1348..1367,
                    },
                    span: 1342..1368,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "GroupBlock",
                    span: 1331..1341,
                },
                span: 1325..1368,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Identifier",
                                                                span: 1391..1401,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1391..1402,
                                                    },
                                                ],
                                                span: 1391..1402,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "':'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1402..1406,
                                                    },
                                                ],
                                                span: 1402..1406,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Atomic",
                                                                span: 1406..1412,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1406..1413,
                                                    },
                                                ],
                                                span: 1406..1413,
                                            },
                                        ],
                                        span: 1391..1413,
                                    },
                                ],
                                span: 1391..1413,
                            },
                        ],
                        text: "Identifier ':' Atomic\n",
                        span: 1391..1413,
                    },
                    span: 1385..1414,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "GroupPair",
                    span: 1375..1384,
                },
                span: 1369..1414,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "AnnotationName",
                                                                span: 1563..1577,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1563..1578,
                                                    },
                                                ],
                                                span: 1563..1578,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "CallBody",
                                                                span: 1578..1586,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1578..1587,
                                                    },
                                                ],
                                                span: 1578..1587,
                                            },
                                        ],
                                        span: 1563..1587,
                                    },
                                ],
                                span: 1563..1587,
                            },
                        ],
                        text: "AnnotationName CallBody\n",
                        span: 1563..1587,
                    },
                    span: 1557..1588,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "AnnotationCall",
                    span: 1542..1556,
                },
                span: 1536..1588,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [
                    AnnotationCallNode {
                        annotation_name: AnnotationNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 1590..1595,
                            },
                            span: 1589..1595,
                        },
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            term: [
                                                                TermNode {
                                                                    atomic: Identifier(
                                                                        IdentifierNode {
                                                                            text: "annotation",
                                                                            span: 1596..1606,
                                                                        },
                                                                    ),
                                                                    prefix: [],
                                                                    suffix: [],
                                                                    span: 1596..1606,
                                                                },
                                                            ],
                                                            span: 1596..1606,
                                                        },
                                                    ],
                                                    span: 1596..1606,
                                                },
                                            ],
                                            span: 1596..1606,
                                        },
                                    ],
                                    text: "annotation",
                                    span: 1596..1606,
                                },
                            ],
                            span: 1595..1607,
                        },
                        span: 1589..1607,
                    },
                ],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: RegexRange(
                                                            RegexRangeNode {
                                                                text: "[@#]",
                                                                span: 1635..1639,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1635..1640,
                                                    },
                                                ],
                                                span: 1635..1640,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Identifier",
                                                                span: 1640..1650,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1640..1651,
                                                    },
                                                ],
                                                span: 1640..1651,
                                            },
                                        ],
                                        span: 1635..1651,
                                    },
                                ],
                                span: 1635..1651,
                            },
                        ],
                        text: "[@#] Identifier\n",
                        span: 1635..1651,
                    },
                    span: 1629..1652,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "AnnotationName",
                    span: 1614..1628,
                },
                span: 1589..1652,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "FunctionName",
                                                                span: 1678..1690,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1678..1691,
                                                    },
                                                ],
                                                span: 1678..1691,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "CallBody",
                                                                span: 1691..1699,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1691..1700,
                                                    },
                                                ],
                                                span: 1691..1700,
                                            },
                                        ],
                                        span: 1678..1700,
                                    },
                                ],
                                span: 1678..1700,
                            },
                        ],
                        text: "FunctionName CallBody\n",
                        span: 1678..1700,
                    },
                    span: 1672..1701,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "FunctionCall",
                    span: 1659..1671,
                },
                span: 1653..1701,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [
                    AnnotationCallNode {
                        annotation_name: AnnotationNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 1703..1708,
                            },
                            span: 1702..1708,
                        },
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            term: [
                                                                TermNode {
                                                                    atomic: Identifier(
                                                                        IdentifierNode {
                                                                            text: "function",
                                                                            span: 1709..1717,
                                                                        },
                                                                    ),
                                                                    prefix: [],
                                                                    suffix: [],
                                                                    span: 1709..1717,
                                                                },
                                                            ],
                                                            span: 1709..1717,
                                                        },
                                                    ],
                                                    span: 1709..1717,
                                                },
                                            ],
                                            span: 1709..1717,
                                        },
                                    ],
                                    text: "function",
                                    span: 1709..1717,
                                },
                            ],
                            span: 1708..1718,
                        },
                        span: 1702..1718,
                    },
                ],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: RegexRange(
                                                            RegexRangeNode {
                                                                text: "[@]",
                                                                span: 1744..1747,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1744..1748,
                                                    },
                                                ],
                                                span: 1744..1748,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Identifier",
                                                                span: 1748..1758,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1748..1759,
                                                    },
                                                ],
                                                span: 1748..1759,
                                            },
                                        ],
                                        span: 1744..1759,
                                    },
                                ],
                                span: 1744..1759,
                            },
                        ],
                        text: "[@] Identifier\n",
                        span: 1744..1759,
                    },
                    span: 1738..1760,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "FunctionName",
                    span: 1725..1737,
                },
                span: 1702..1760,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'('",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1782..1786,
                                                    },
                                                ],
                                                span: 1782..1786,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "Expression",
                                                                                                        span: 1787..1797,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 1787..1798,
                                                                                            },
                                                                                        ],
                                                                                        span: 1787..1798,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Atomic0(
                                                                                                    ExpressionNode {
                                                                                                        expression_hard: [
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                term: [
                                                                                                                                    TermNode {
                                                                                                                                        atomic: String(
                                                                                                                                            String0(
                                                                                                                                                "','",
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                        prefix: [],
                                                                                                                                        suffix: [],
                                                                                                                                        span: 1799..1803,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                                span: 1799..1803,
                                                                                                                            },
                                                                                                                            ExpressionTagNode {
                                                                                                                                term: [
                                                                                                                                    TermNode {
                                                                                                                                        atomic: Identifier(
                                                                                                                                            IdentifierNode {
                                                                                                                                                text: "Expression",
                                                                                                                                                span: 1803..1813,
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                        prefix: [],
                                                                                                                                        suffix: [],
                                                                                                                                        span: 1803..1813,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                                span: 1803..1813,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 1799..1813,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 1799..1813,
                                                                                                            },
                                                                                                        ],
                                                                                                        text: "',' Expression",
                                                                                                        span: 1799..1813,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [
                                                                                                    Suffix1,
                                                                                                ],
                                                                                                span: 1798..1815,
                                                                                            },
                                                                                        ],
                                                                                        span: 1798..1816,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: String(
                                                                                                    String0(
                                                                                                        "','",
                                                                                                    ),
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [
                                                                                                    Suffix0,
                                                                                                ],
                                                                                                span: 1816..1820,
                                                                                            },
                                                                                        ],
                                                                                        span: 1816..1820,
                                                                                    },
                                                                                ],
                                                                                span: 1787..1820,
                                                                            },
                                                                        ],
                                                                        span: 1787..1820,
                                                                    },
                                                                ],
                                                                text: "Expression (',' Expression)* ','?",
                                                                span: 1787..1820,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix0,
                                                        ],
                                                        span: 1786..1822,
                                                    },
                                                ],
                                                span: 1786..1823,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "')'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1823..1827,
                                                    },
                                                ],
                                                span: 1823..1827,
                                            },
                                        ],
                                        span: 1782..1827,
                                    },
                                ],
                                span: 1782..1827,
                            },
                        ],
                        text: "'(' (Expression (',' Expression)* ','?)? ')'\n",
                        span: 1782..1827,
                    },
                    span: 1776..1828,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "CallBody",
                    span: 1767..1775,
                },
                span: 1761..1828,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "ExpressionHard",
                                                                span: 1973..1987,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 1973..1988,
                                                    },
                                                ],
                                                span: 1973..1988,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: String(
                                                                                                    String0(
                                                                                                        "'|'",
                                                                                                    ),
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 1989..1993,
                                                                                            },
                                                                                        ],
                                                                                        span: 1989..1993,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "ExpressionHard",
                                                                                                        span: 1993..2007,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 1993..2007,
                                                                                            },
                                                                                        ],
                                                                                        span: 1993..2007,
                                                                                    },
                                                                                ],
                                                                                span: 1989..2007,
                                                                            },
                                                                        ],
                                                                        span: 1989..2007,
                                                                    },
                                                                ],
                                                                text: "'|' ExpressionHard",
                                                                span: 1989..2007,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 1988..2009,
                                                    },
                                                ],
                                                span: 1988..2010,
                                            },
                                        ],
                                        span: 1973..2010,
                                    },
                                ],
                                span: 1973..2010,
                            },
                        ],
                        text: "ExpressionHard ('|' ExpressionHard)* ",
                        span: 1973..2010,
                    },
                    span: 1971..2011,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "Expression",
                    span: 1956..1966,
                },
                span: 1950..2011,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "ExpressionSoft",
                                                                span: 2035..2049,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 2035..2050,
                                                    },
                                                ],
                                                span: 2035..2050,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: String(
                                                                                                    String0(
                                                                                                        "'~'",
                                                                                                    ),
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 2051..2055,
                                                                                            },
                                                                                        ],
                                                                                        span: 2051..2055,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "ExpressionSoft",
                                                                                                        span: 2055..2069,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 2055..2069,
                                                                                            },
                                                                                        ],
                                                                                        span: 2055..2069,
                                                                                    },
                                                                                ],
                                                                                span: 2051..2069,
                                                                            },
                                                                        ],
                                                                        span: 2051..2069,
                                                                    },
                                                                ],
                                                                text: "'~' ExpressionSoft",
                                                                span: 2051..2069,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 2050..2071,
                                                    },
                                                ],
                                                span: 2050..2072,
                                            },
                                        ],
                                        span: 2035..2072,
                                    },
                                ],
                                span: 2035..2072,
                            },
                        ],
                        text: "ExpressionSoft ('~' ExpressionSoft)* ",
                        span: 2035..2072,
                    },
                    span: 2033..2073,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "ExpressionHard",
                    span: 2018..2032,
                },
                span: 2012..2073,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "ExpressionTag",
                                                                span: 2097..2110,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 2097..2111,
                                                    },
                                                ],
                                                span: 2097..2111,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "ExpressionTag",
                                                                span: 2111..2124,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 2111..2125,
                                                    },
                                                ],
                                                span: 2111..2126,
                                            },
                                        ],
                                        span: 2097..2126,
                                    },
                                ],
                                span: 2097..2126,
                            },
                        ],
                        text: "ExpressionTag ExpressionTag* ",
                        span: 2097..2126,
                    },
                    span: 2095..2127,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "ExpressionSoft",
                    span: 2080..2094,
                },
                span: 2074..2127,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Term",
                                                                span: 2151..2155,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 2151..2156,
                                                    },
                                                ],
                                                span: 2151..2156,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: String(
                                                                                                    String0(
                                                                                                        "':'",
                                                                                                    ),
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 2157..2161,
                                                                                            },
                                                                                        ],
                                                                                        span: 2157..2161,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "Term",
                                                                                                        span: 2161..2165,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 2161..2165,
                                                                                            },
                                                                                        ],
                                                                                        span: 2161..2165,
                                                                                    },
                                                                                ],
                                                                                span: 2157..2165,
                                                                            },
                                                                        ],
                                                                        span: 2157..2165,
                                                                    },
                                                                ],
                                                                text: "':' Term",
                                                                span: 2157..2165,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 2156..2167,
                                                    },
                                                ],
                                                span: 2156..2168,
                                            },
                                        ],
                                        span: 2151..2168,
                                    },
                                ],
                                span: 2151..2168,
                            },
                        ],
                        text: "Term (':' Term)* ",
                        span: 2151..2168,
                    },
                    span: 2149..2169,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "ExpressionTag",
                    span: 2134..2147,
                },
                span: 2128..2169,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Prefix",
                                                                span: 2187..2193,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 2187..2194,
                                                    },
                                                ],
                                                span: 2187..2195,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Atomic",
                                                                span: 2195..2201,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 2195..2202,
                                                    },
                                                ],
                                                span: 2195..2202,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Suffix",
                                                                span: 2202..2208,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 2202..2209,
                                                    },
                                                ],
                                                span: 2202..2210,
                                            },
                                        ],
                                        span: 2187..2210,
                                    },
                                ],
                                span: 2187..2210,
                            },
                        ],
                        text: "Prefix* Atomic Suffix*\n",
                        span: 2187..2210,
                    },
                    span: 2181..2211,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "Term",
                    span: 2176..2180,
                },
                span: 2170..2211,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                annotation_call: [],
                modifier_call: [],
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression: ExpressionNode {
                                expression_hard: [
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'!'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2233..2251,
                                                            },
                                                        ],
                                                        span: 2233..2251,
                                                    },
                                                ],
                                                span: 2233..2251,
                                            },
                                        ],
                                        span: 2233..2251,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'&'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2253..2271,
                                                            },
                                                        ],
                                                        span: 2253..2271,
                                                    },
                                                ],
                                                span: 2253..2271,
                                            },
                                        ],
                                        span: 2253..2271,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'^'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2273..2285,
                                                            },
                                                        ],
                                                        span: 2273..2285,
                                                    },
                                                ],
                                                span: 2273..2285,
                                            },
                                        ],
                                        span: 2273..2285,
                                    },
                                ],
                                text: "'!' #Negative\n    | '&' #Positive\n    | '^' #Remark\n",
                                span: 2233..2285,
                            },
                            span: 2231..2285,
                        },
                    ],
                    span: 2225..2286,
                },
                name: IdentifierNode {
                    text: "Prefix",
                    span: 2218..2224,
                },
                span: 2212..2286,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                annotation_call: [],
                modifier_call: [],
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression: ExpressionNode {
                                expression_hard: [
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'?'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2308..2326,
                                                            },
                                                        ],
                                                        span: 2308..2326,
                                                    },
                                                ],
                                                span: 2308..2326,
                                            },
                                        ],
                                        span: 2308..2326,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'*'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2328..2346,
                                                            },
                                                        ],
                                                        span: 2328..2346,
                                                    },
                                                ],
                                                span: 2328..2346,
                                            },
                                        ],
                                        span: 2328..2346,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'+'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2348..2360,
                                                            },
                                                        ],
                                                        span: 2348..2360,
                                                    },
                                                ],
                                                span: 2348..2360,
                                            },
                                        ],
                                        span: 2348..2360,
                                    },
                                ],
                                text: "'?' #Negative\n    | '*' #Positive\n    | '+' #Remark\n",
                                span: 2308..2360,
                            },
                            span: 2306..2360,
                        },
                    ],
                    span: 2300..2361,
                },
                name: IdentifierNode {
                    text: "Suffix",
                    span: 2293..2299,
                },
                span: 2287..2361,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                annotation_call: [],
                modifier_call: [],
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression: ExpressionNode {
                                expression_hard: [
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'('",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2504..2508,
                                                            },
                                                        ],
                                                        span: 2504..2508,
                                                    },
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'|'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [
                                                                    Suffix0,
                                                                ],
                                                                span: 2508..2512,
                                                            },
                                                        ],
                                                        span: 2508..2513,
                                                    },
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "Expression",
                                                                        span: 2513..2523,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2513..2524,
                                                            },
                                                        ],
                                                        span: 2513..2524,
                                                    },
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "')'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2524..2532,
                                                            },
                                                        ],
                                                        span: 2524..2532,
                                                    },
                                                ],
                                                span: 2504..2532,
                                            },
                                        ],
                                        span: 2504..2532,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "FunctionCall",
                                                                        span: 2534..2546,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2534..2551,
                                                            },
                                                        ],
                                                        span: 2534..2551,
                                                    },
                                                ],
                                                span: 2534..2551,
                                            },
                                        ],
                                        span: 2534..2551,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "Boolean",
                                                                        span: 2553..2560,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2553..2565,
                                                            },
                                                        ],
                                                        span: 2553..2565,
                                                    },
                                                ],
                                                span: 2553..2565,
                                            },
                                        ],
                                        span: 2553..2565,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "String",
                                                                        span: 2567..2573,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2567..2578,
                                                            },
                                                        ],
                                                        span: 2567..2578,
                                                    },
                                                ],
                                                span: 2567..2578,
                                            },
                                        ],
                                        span: 2567..2578,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "RegexEmbed",
                                                                        span: 2580..2590,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2580..2595,
                                                            },
                                                        ],
                                                        span: 2580..2595,
                                                    },
                                                ],
                                                span: 2580..2595,
                                            },
                                        ],
                                        span: 2580..2595,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "RegexRange",
                                                                        span: 2597..2607,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2597..2612,
                                                            },
                                                        ],
                                                        span: 2597..2612,
                                                    },
                                                ],
                                                span: 2597..2612,
                                            },
                                        ],
                                        span: 2597..2612,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "Identifier",
                                                                        span: 2614..2624,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2614..2625,
                                                            },
                                                        ],
                                                        span: 2614..2625,
                                                    },
                                                ],
                                                span: 2614..2625,
                                            },
                                        ],
                                        span: 2614..2625,
                                    },
                                ],
                                text: "'(' '|'? Expression ')'\n    | FunctionCall\n    | Boolean\n    | String\n    | RegexEmbed\n    | RegexRange\n    | Identifier\n",
                                span: 2504..2625,
                            },
                            span: 2502..2625,
                        },
                    ],
                    span: 2496..2626,
                },
                name: IdentifierNode {
                    text: "Atomic",
                    span: 2489..2495,
                },
                span: 2483..2626,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                annotation_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 2749..2755,
                        },
                        span: 2749..2755,
                    },
                ],
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression: ExpressionNode {
                                expression_hard: [
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String1(
                                                                        "\"'\"",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2777..2781,
                                                            },
                                                        ],
                                                        span: 2777..2781,
                                                    },
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Atomic0(
                                                                    ExpressionNode {
                                                                        expression_hard: [
                                                                            ExpressionHardNode {
                                                                                expression_soft: [
                                                                                    ExpressionSoftNode {
                                                                                        expression_tag: [
                                                                                            ExpressionTagNode {
                                                                                                term: [
                                                                                                    TermNode {
                                                                                                        atomic: String(
                                                                                                            String1(
                                                                                                                "\"'\"",
                                                                                                            ),
                                                                                                        ),
                                                                                                        prefix: [
                                                                                                            Prefix0,
                                                                                                        ],
                                                                                                        suffix: [],
                                                                                                        span: 2782..2787,
                                                                                                    },
                                                                                                ],
                                                                                                span: 2782..2787,
                                                                                            },
                                                                                            ExpressionTagNode {
                                                                                                term: [
                                                                                                    TermNode {
                                                                                                        atomic: Identifier(
                                                                                                            IdentifierNode {
                                                                                                                text: "ANY",
                                                                                                                span: 2787..2790,
                                                                                                            },
                                                                                                        ),
                                                                                                        prefix: [],
                                                                                                        suffix: [],
                                                                                                        span: 2787..2790,
                                                                                                    },
                                                                                                ],
                                                                                                span: 2787..2790,
                                                                                            },
                                                                                        ],
                                                                                        span: 2782..2790,
                                                                                    },
                                                                                ],
                                                                                span: 2782..2790,
                                                                            },
                                                                        ],
                                                                        text: "!\"'\" ANY",
                                                                        span: 2782..2790,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [
                                                                    Suffix1,
                                                                ],
                                                                span: 2781..2792,
                                                            },
                                                        ],
                                                        span: 2781..2793,
                                                    },
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String1(
                                                                        "\"'\"",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2793..2806,
                                                            },
                                                        ],
                                                        span: 2793..2806,
                                                    },
                                                ],
                                                span: 2777..2806,
                                            },
                                        ],
                                        span: 2777..2806,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'\"'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2808..2812,
                                                            },
                                                        ],
                                                        span: 2808..2812,
                                                    },
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: Atomic0(
                                                                    ExpressionNode {
                                                                        expression_hard: [
                                                                            ExpressionHardNode {
                                                                                expression_soft: [
                                                                                    ExpressionSoftNode {
                                                                                        expression_tag: [
                                                                                            ExpressionTagNode {
                                                                                                term: [
                                                                                                    TermNode {
                                                                                                        atomic: String(
                                                                                                            String0(
                                                                                                                "'\"'",
                                                                                                            ),
                                                                                                        ),
                                                                                                        prefix: [
                                                                                                            Prefix0,
                                                                                                        ],
                                                                                                        suffix: [],
                                                                                                        span: 2813..2818,
                                                                                                    },
                                                                                                ],
                                                                                                span: 2813..2818,
                                                                                            },
                                                                                            ExpressionTagNode {
                                                                                                term: [
                                                                                                    TermNode {
                                                                                                        atomic: Identifier(
                                                                                                            IdentifierNode {
                                                                                                                text: "ANY",
                                                                                                                span: 2818..2821,
                                                                                                            },
                                                                                                        ),
                                                                                                        prefix: [],
                                                                                                        suffix: [],
                                                                                                        span: 2818..2821,
                                                                                                    },
                                                                                                ],
                                                                                                span: 2818..2821,
                                                                                            },
                                                                                        ],
                                                                                        span: 2813..2821,
                                                                                    },
                                                                                ],
                                                                                span: 2813..2821,
                                                                            },
                                                                        ],
                                                                        text: "!'\"' ANY",
                                                                        span: 2813..2821,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [
                                                                    Suffix1,
                                                                ],
                                                                span: 2812..2823,
                                                            },
                                                        ],
                                                        span: 2812..2824,
                                                    },
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'\"'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2824..2837,
                                                            },
                                                        ],
                                                        span: 2824..2837,
                                                    },
                                                ],
                                                span: 2808..2837,
                                            },
                                        ],
                                        span: 2808..2837,
                                    },
                                ],
                                text: "\"'\" (!\"'\" ANY)* \"'\" #Raw\n    | '\"' (!'\"' ANY)* '\"' #Escaped\n",
                                span: 2777..2837,
                            },
                            span: 2775..2837,
                        },
                    ],
                    span: 2769..2838,
                },
                name: IdentifierNode {
                    text: "String",
                    span: 2762..2768,
                },
                span: 2749..2838,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'/'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 2990..2994,
                                                    },
                                                ],
                                                span: 2990..2994,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: String(
                                                                                                    String0(
                                                                                                        "'/'",
                                                                                                    ),
                                                                                                ),
                                                                                                prefix: [
                                                                                                    Prefix0,
                                                                                                ],
                                                                                                suffix: [],
                                                                                                span: 2995..3000,
                                                                                            },
                                                                                        ],
                                                                                        span: 2995..3000,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "ANY",
                                                                                                        span: 3000..3003,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 3000..3003,
                                                                                            },
                                                                                        ],
                                                                                        span: 3000..3003,
                                                                                    },
                                                                                ],
                                                                                span: 2995..3003,
                                                                            },
                                                                        ],
                                                                        span: 2995..3003,
                                                                    },
                                                                ],
                                                                text: "!'/' ANY",
                                                                span: 2995..3003,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 2994..3005,
                                                    },
                                                ],
                                                span: 2994..3006,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'/'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 3006..3010,
                                                    },
                                                ],
                                                span: 3006..3010,
                                            },
                                        ],
                                        span: 2990..3010,
                                    },
                                ],
                                span: 2990..3010,
                            },
                        ],
                        text: "'/' (!'/' ANY)* '/'\n",
                        span: 2990..3010,
                    },
                    span: 2984..3011,
                },
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 2960..2966,
                        },
                        span: 2960..2966,
                    },
                ],
                cast: None,
                name: IdentifierNode {
                    text: "RegexEmbed",
                    span: 2973..2983,
                },
                span: 2960..3011,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'['",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 3042..3046,
                                                    },
                                                ],
                                                span: 3042..3046,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "RegexNegative",
                                                                span: 3046..3059,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix0,
                                                        ],
                                                        span: 3046..3060,
                                                    },
                                                ],
                                                span: 3046..3061,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: String(
                                                                                                    String0(
                                                                                                        "']'",
                                                                                                    ),
                                                                                                ),
                                                                                                prefix: [
                                                                                                    Prefix0,
                                                                                                ],
                                                                                                suffix: [],
                                                                                                span: 3062..3067,
                                                                                            },
                                                                                        ],
                                                                                        span: 3062..3067,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "ANY",
                                                                                                        span: 3067..3070,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 3067..3070,
                                                                                            },
                                                                                        ],
                                                                                        span: 3067..3070,
                                                                                    },
                                                                                ],
                                                                                span: 3062..3070,
                                                                            },
                                                                        ],
                                                                        span: 3062..3070,
                                                                    },
                                                                ],
                                                                text: "!']' ANY",
                                                                span: 3062..3070,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 3061..3072,
                                                    },
                                                ],
                                                span: 3061..3073,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "']'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 3073..3077,
                                                    },
                                                ],
                                                span: 3073..3077,
                                            },
                                        ],
                                        span: 3042..3077,
                                    },
                                ],
                                span: 3042..3077,
                            },
                        ],
                        text: "'[' RegexNegative? (!']' ANY)* ']'\n",
                        span: 3042..3077,
                    },
                    span: 3036..3078,
                },
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3012..3018,
                        },
                        span: 3012..3018,
                    },
                ],
                cast: None,
                name: IdentifierNode {
                    text: "RegexRange",
                    span: 3025..3035,
                },
                span: 3012..3078,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: String(
                                                            String0(
                                                                "'^'",
                                                            ),
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 3105..3109,
                                                    },
                                                ],
                                                span: 3105..3109,
                                            },
                                        ],
                                        span: 3105..3109,
                                    },
                                ],
                                span: 3105..3109,
                            },
                        ],
                        text: "'^'\n",
                        span: 3105..3109,
                    },
                    span: 3099..3110,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "RegexNegative",
                    span: 3085..3098,
                },
                span: 3079..3110,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Identifier",
                                                                span: 3269..3279,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 3269..3280,
                                                    },
                                                ],
                                                span: 3269..3280,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Atomic0(
                                                                                                    ExpressionNode {
                                                                                                        expression_hard: [
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                term: [
                                                                                                                                    TermNode {
                                                                                                                                        atomic: String(
                                                                                                                                            String0(
                                                                                                                                                "'.'",
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                        prefix: [],
                                                                                                                                        suffix: [],
                                                                                                                                        span: 3282..3286,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                                span: 3282..3286,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 3282..3286,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 3282..3286,
                                                                                                            },
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                term: [
                                                                                                                                    TermNode {
                                                                                                                                        atomic: String(
                                                                                                                                            String0(
                                                                                                                                                "'::'",
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                        prefix: [],
                                                                                                                                        suffix: [],
                                                                                                                                        span: 3288..3292,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                                span: 3288..3292,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 3288..3292,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 3288..3292,
                                                                                                            },
                                                                                                        ],
                                                                                                        text: "'.' | '::'",
                                                                                                        span: 3282..3292,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 3281..3294,
                                                                                            },
                                                                                        ],
                                                                                        span: 3281..3294,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "Identifier",
                                                                                                        span: 3294..3304,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 3294..3304,
                                                                                            },
                                                                                        ],
                                                                                        span: 3294..3304,
                                                                                    },
                                                                                ],
                                                                                span: 3281..3304,
                                                                            },
                                                                        ],
                                                                        span: 3281..3304,
                                                                    },
                                                                ],
                                                                text: "('.' | '::') Identifier",
                                                                span: 3281..3304,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 3280..3306,
                                                    },
                                                ],
                                                span: 3280..3307,
                                            },
                                        ],
                                        span: 3269..3307,
                                    },
                                ],
                                span: 3269..3307,
                            },
                        ],
                        text: "Identifier (('.' | '::') Identifier)*\n",
                        span: 3269..3307,
                    },
                    span: 3263..3308,
                },
                modifier_call: [],
                cast: Some(
                    IdentifierNode {
                        text: "Namepath",
                        span: 3254..3262,
                    },
                ),
                name: IdentifierNode {
                    text: "NamepathFree",
                    span: 3238..3250,
                },
                span: 3232..3308,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Identifier(
                                                            IdentifierNode {
                                                                text: "Identifier",
                                                                span: 3330..3340,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 3330..3341,
                                                    },
                                                ],
                                                span: 3330..3341,
                                            },
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: Atomic0(
                                                            ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: String(
                                                                                                    String0(
                                                                                                        "'::'",
                                                                                                    ),
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 3342..3347,
                                                                                            },
                                                                                        ],
                                                                                        span: 3342..3347,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        term: [
                                                                                            TermNode {
                                                                                                atomic: Identifier(
                                                                                                    IdentifierNode {
                                                                                                        text: "Identifier",
                                                                                                        span: 3347..3357,
                                                                                                    },
                                                                                                ),
                                                                                                prefix: [],
                                                                                                suffix: [],
                                                                                                span: 3347..3357,
                                                                                            },
                                                                                        ],
                                                                                        span: 3347..3357,
                                                                                    },
                                                                                ],
                                                                                span: 3342..3357,
                                                                            },
                                                                        ],
                                                                        span: 3342..3357,
                                                                    },
                                                                ],
                                                                text: "'::' Identifier",
                                                                span: 3342..3357,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [
                                                            Suffix1,
                                                        ],
                                                        span: 3341..3359,
                                                    },
                                                ],
                                                span: 3341..3360,
                                            },
                                        ],
                                        span: 3330..3360,
                                    },
                                ],
                                span: 3330..3360,
                            },
                        ],
                        text: "Identifier ('::' Identifier)*\n",
                        span: 3330..3360,
                    },
                    span: 3324..3361,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "Namepath",
                    span: 3315..3323,
                },
                span: 3309..3361,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                annotation_call: [],
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                term: [
                                                    TermNode {
                                                        atomic: RegexEmbed(
                                                            RegexEmbedNode {
                                                                text: "/[_\\p{XID_start}]\\p{XID_continue}*/",
                                                                span: 3385..3420,
                                                            },
                                                        ),
                                                        prefix: [],
                                                        suffix: [],
                                                        span: 3385..3421,
                                                    },
                                                ],
                                                span: 3385..3421,
                                            },
                                        ],
                                        span: 3385..3421,
                                    },
                                ],
                                span: 3385..3421,
                            },
                        ],
                        text: "/[_\\p{XID_start}]\\p{XID_continue}*/\n",
                        span: 3385..3421,
                    },
                    span: 3379..3422,
                },
                modifier_call: [],
                cast: None,
                name: IdentifierNode {
                    text: "Identifier",
                    span: 3368..3378,
                },
                span: 3362..3422,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                annotation_call: [],
                modifier_call: [],
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression: ExpressionNode {
                                expression_hard: [
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'true'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 3445..3463,
                                                            },
                                                        ],
                                                        span: 3445..3463,
                                                    },
                                                ],
                                                span: 3445..3463,
                                            },
                                        ],
                                        span: 3445..3463,
                                    },
                                    ExpressionHardNode {
                                        expression_soft: [
                                            ExpressionSoftNode {
                                                expression_tag: [
                                                    ExpressionTagNode {
                                                        term: [
                                                            TermNode {
                                                                atomic: String(
                                                                    String0(
                                                                        "'false'",
                                                                    ),
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 3465..3480,
                                                            },
                                                        ],
                                                        span: 3465..3480,
                                                    },
                                                ],
                                                span: 3465..3480,
                                            },
                                        ],
                                        span: 3465..3480,
                                    },
                                ],
                                text: "'true'  #True\n    | 'false' #False\n",
                                span: 3445..3480,
                            },
                            span: 3443..3480,
                        },
                    ],
                    span: 3437..3481,
                },
                name: IdentifierNode {
                    text: "Boolean",
                    span: 3429..3436,
                },
                span: 3423..3481,
            },
        ),
    ],
    span: 0..3481,
}