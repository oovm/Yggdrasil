GrammarInfo {
    url: None,
    name: Identifier("Bootstrap", 8..17),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Root": GrammarRule {
            name: Identifier("Root", 36..40),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: true,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Statement", 47..56),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Statement", 47..56),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween {
                                min: 0,
                                max: 4294967295,
                            },
                        ],
                    },
                },
            },
            range: 24..59,
        },
        "Statement": GrammarRule {
            name: Identifier("Statement", 67..76),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    (
                        Some(
                            Identifier("Statement0", 0..0),
                        ),
                        Expression {
                            tag: None,
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("GrammarStatement", 85..101),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ClassStatement", 108..122),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("UnionStatement", 129..143),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("GroupStatement", 150..164),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                ],
            },
            range: 61..166,
        },
        "GrammarStatement": GrammarRule {
            name: Identifier("GrammarStatement", 294..310),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_GRAMMAR", 318..328),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Identifier", 329..339),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 329..339),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("GrammarBlock", 340..352),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("GrammarBlock", 340..352),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 288..354,
        },
        "GrammarBlock": GrammarRule {
            name: Identifier("GrammarBlock", 361..373),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 355..389,
        },
        "ClassStatement": GrammarRule {
            name: Identifier("ClassStatement", 515..529),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("AnnotationCall", 536..550),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("AnnotationCall", 536..550),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("ModifierCall", 552..564),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ModifierCall", 552..564),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_CLASS", 567..575),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("name", 577..581),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 582..592),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilText {
                                                        text: "->",
                                                        insensitive: false,
                                                        range: 0..0,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("cast", 600..604),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 605..615),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_REMARK", 618..627),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_REMARK", 618..627),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 629..639),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 629..639),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 509..641,
        },
        "ClassBlock": GrammarRule {
            name: Identifier("ClassBlock", 648..658),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "|",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 674..684),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 674..684),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 642..690,
        },
        "UnionStatement": GrammarRule {
            name: Identifier("UnionStatement", 845..859),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("AnnotationCall", 866..880),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("AnnotationCall", 866..880),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("ModifierCall", 882..894),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ModifierCall", 882..894),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_UNION", 897..905),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("name", 907..911),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 912..922),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_REMARK", 924..933),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_REMARK", 924..933),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("UnionBlock", 935..945),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("UnionBlock", 935..945),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 839..947,
        },
        "UnionBlock": GrammarRule {
            name: Identifier("UnionBlock", 954..964),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("UnionBranch", 975..986),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("UnionBranch", 975..986),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 948..993,
        },
        "UnionBranch": GrammarRule {
            name: Identifier("UnionBranch", 1000..1011),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "|",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 1022..1032),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1022..1032),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("BranchTag", 1033..1042),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("BranchTag", 1033..1042),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 994..1045,
        },
        "BranchTag": GrammarRule {
            name: Identifier("BranchTag", 1073..1082),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "#",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 1093..1103),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1093..1103),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("RightAssociativity", 1104..1122),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("RightAssociativity", 1104..1122),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1046..1125,
        },
        "RightAssociativity": GrammarRule {
            name: Identifier("RightAssociativity", 1132..1150),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: ">",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 1126..1162,
        },
        "GroupStatement": GrammarRule {
            name: Identifier("GroupStatement", 1290..1304),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("AnnotationCall", 1311..1325),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AnnotationCall", 1311..1325),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierCall", 1327..1339),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierCall", 1327..1339),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_GROUP", 1342..1350),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Identifier", 1351..1361),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1351..1361),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("GroupBlock", 1363..1373),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("GroupBlock", 1363..1373),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1284..1375,
        },
        "GroupBlock": GrammarRule {
            name: Identifier("GroupBlock", 1382..1392),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("GroupPair", 1403..1412),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("GroupPair", 1403..1412),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1376..1419,
        },
        "GroupPair": GrammarRule {
            name: Identifier("GroupPair", 1426..1435),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 1442..1452),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1442..1452),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ":",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Atomic", 1457..1463),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Atomic", 1457..1463),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1420..1465,
        },
        "AnnotationCall": GrammarRule {
            name: Identifier("AnnotationCall", 1593..1607),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AnnotationName", 1614..1628),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationName", 1614..1628),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("CallBody", 1629..1637),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("CallBody", 1629..1637),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1587..1639,
        },
        "AnnotationName": GrammarRule {
            name: Identifier("AnnotationName", 1665..1679),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilRegex {
                                    raw: "[@#]",
                                    span: 1686..1690,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Identifier", 1691..1701),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1691..1701),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1640..1703,
        },
        "FunctionCall": GrammarRule {
            name: Identifier("FunctionCall", 1710..1722),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("FunctionName", 1729..1741),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("FunctionName", 1729..1741),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("CallBody", 1742..1750),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("CallBody", 1742..1750),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1704..1752,
        },
        "FunctionName": GrammarRule {
            name: Identifier("FunctionName", 1776..1788),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilRegex {
                                    raw: "[@]",
                                    span: 1795..1798,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Identifier", 1799..1809),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1799..1809),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1753..1811,
        },
        "CallBody": GrammarRule {
            name: Identifier("CallBody", 1818..1826),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("Expression", 1838..1848),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Expression", 1838..1848),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: IGNORED,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: YggdrasilText {
                                                                                        text: ",",
                                                                                        insensitive: false,
                                                                                        range: 0..0,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("Expression", 1854..1864),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("Expression", 1854..1864),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween {
                                                                min: 0,
                                                                max: 4294967295,
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: ",",
                                                                insensitive: false,
                                                                range: 0..0,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween {
                                                                min: 0,
                                                                max: 1,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1812..1879,
        },
        "Expression": GrammarRule {
            name: Identifier("Expression", 2007..2017),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ExpressionHard", 2024..2038),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ExpressionHard", 2024..2038),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "|",
                                                                    insensitive: false,
                                                                    range: 0..0,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("ExpressionHard", 2044..2058),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ExpressionHard", 2044..2058),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2001..2062,
        },
        "ExpressionHard": GrammarRule {
            name: Identifier("ExpressionHard", 2069..2083),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ExpressionSoft", 2086..2100),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ExpressionSoft", 2086..2100),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "~",
                                                                    insensitive: false,
                                                                    range: 0..0,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("ExpressionSoft", 2106..2120),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ExpressionSoft", 2106..2120),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2063..2124,
        },
        "ExpressionSoft": GrammarRule {
            name: Identifier("ExpressionSoft", 2131..2145),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ExpressionTag", 2148..2161),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ExpressionTag", 2148..2161),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ExpressionTag", 2162..2175),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExpressionTag", 2162..2175),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2125..2178,
        },
        "ExpressionTag": GrammarRule {
            name: Identifier("ExpressionTag", 2185..2198),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("Identifier", 2203..2213),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 2203..2213),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilText {
                                                        text: ":",
                                                        insensitive: false,
                                                        range: 0..0,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Term", 2220..2224),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2220..2224),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2179..2226,
        },
        "Term": GrammarRule {
            name: Identifier("Term", 2233..2237),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Prefix", 2244..2250),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Prefix", 2244..2250),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Atomic", 2252..2258),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Atomic", 2252..2258),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Suffix", 2259..2265),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Suffix", 2259..2265),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2227..2268,
        },
        "Prefix": GrammarRule {
            name: Identifier("Prefix", 2275..2281),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    (
                        Some(
                            Identifier("Prefix0", 0..0),
                        ),
                        Expression {
                            tag: None,
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "!",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "&",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "^",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                ],
            },
            range: 2269..2343,
        },
        "Suffix": GrammarRule {
            name: Identifier("Suffix", 2350..2356),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    (
                        Some(
                            Identifier("Suffix0", 0..0),
                        ),
                        Expression {
                            tag: None,
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "?",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "*",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "+",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                ],
            },
            range: 2344..2413,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 2541..2547),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    (
                        Some(
                            Identifier("Atomic0", 0..0),
                        ),
                        Expression {
                            tag: None,
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("GroupExpression", 2556..2571),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("FunctionCall", 2578..2590),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Boolean", 2597..2604),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("String", 2611..2617),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("RegexEmbed", 2624..2634),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("RegexRange", 2641..2651),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 2658..2668),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                ],
            },
            range: 2535..2670,
        },
        "GroupExpression": GrammarRule {
            name: Identifier("GroupExpression", 2677..2692),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "|",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 2708..2718),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 2708..2718),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2671..2724,
        },
        "String": GrammarRule {
            name: Identifier("String", 2860..2866),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    (
                        Some(
                            Identifier("String0", 0..0),
                        ),
                        Expression {
                            tag: None,
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilText {
                                                        text: "'",
                                                        insensitive: false,
                                                        range: 0..0,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: IGNORED,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: UnaryExpression {
                                                                                        base: Expression {
                                                                                            tag: None,
                                                                                            remark: false,
                                                                                            body: YggdrasilText {
                                                                                                text: "'",
                                                                                                insensitive: false,
                                                                                                range: 0..0,
                                                                                            },
                                                                                        },
                                                                                        operators: [
                                                                                            Negative,
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ANY,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween {
                                                                min: 0,
                                                                max: 4294967295,
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilText {
                                                        text: "'",
                                                        insensitive: false,
                                                        range: 0..0,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilText {
                                                        text: "\"",
                                                        insensitive: false,
                                                        range: 0..0,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: IGNORED,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: UnaryExpression {
                                                                                        base: Expression {
                                                                                            tag: None,
                                                                                            remark: false,
                                                                                            body: YggdrasilText {
                                                                                                text: "\"",
                                                                                                insensitive: false,
                                                                                                range: 0..0,
                                                                                            },
                                                                                        },
                                                                                        operators: [
                                                                                            Negative,
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ANY,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween {
                                                                min: 0,
                                                                max: 4294967295,
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilText {
                                                        text: "\"",
                                                        insensitive: false,
                                                        range: 0..0,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                ],
            },
            range: 2847..2936,
        },
        "RegexEmbed": GrammarRule {
            name: Identifier("RegexEmbed", 3071..3081),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "/",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: "/",
                                                                insensitive: false,
                                                                range: 0..0,
                                                            },
                                                        },
                                                        operators: [
                                                            Negative,
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ANY,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "/",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3058..3109,
        },
        "RegexRange": GrammarRule {
            name: Identifier("RegexRange", 3123..3133),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "[",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("RegexNegative", 3144..3157),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("RegexNegative", 3144..3157),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: "]",
                                                                insensitive: false,
                                                                range: 0..0,
                                                            },
                                                        },
                                                        operators: [
                                                            Negative,
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ANY,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "]",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3110..3176,
        },
        "RegexNegative": GrammarRule {
            name: Identifier("RegexNegative", 3183..3196),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "^",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 3177..3208,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 3336..3348),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 3367..3377),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3367..3377),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ChoiceExpression {
                                                                    branches: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: ".",
                                                                                insensitive: false,
                                                                                range: 0..0,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: "::",
                                                                                insensitive: false,
                                                                                range: 0..0,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 3392..3402),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 3392..3402),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3330..3406,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 3413..3421),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 3428..3438),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3428..3438),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "::",
                                                                    insensitive: false,
                                                                    range: 0..0,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 3445..3455),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 3445..3455),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3407..3459,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 3466..3476),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 3483..3518,
                    },
                },
            },
            range: 3460..3520,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 3527..3534),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    (
                        Some(
                            Identifier("Boolean0", 0..0),
                        ),
                        Expression {
                            tag: None,
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "true",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "false",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                ],
            },
            range: 3521..3579,
        },
    },
    token_sets: {},
    functions: {},
}