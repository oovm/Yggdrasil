GrammarInfo {
    url: None,
    name: Identifier("Bootstrap", 8..17),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Root": GrammarRule {
            name: Identifier("Root", 36..40),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: true,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Statement", 47..56),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Statement", 47..56),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween {
                                min: 0,
                                max: 4294967295,
                            },
                        ],
                    },
                },
            },
            range: 24..59,
        },
        "Statement": GrammarRule {
            name: Identifier("Statement", 67..76),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GrammarStatement", 85..101),
                        ),
                        branch: Expression {
                            tag: Identifier("GrammarStatement", 85..101),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("GrammarStatement", 85..101),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassStatement", 108..122),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassStatement", 108..122),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassStatement", 108..122),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("UnionStatement", 129..143),
                        ),
                        branch: Expression {
                            tag: Identifier("UnionStatement", 129..143),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("UnionStatement", 129..143),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GroupStatement", 150..164),
                        ),
                        branch: Expression {
                            tag: Identifier("GroupStatement", 150..164),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("GroupStatement", 150..164),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 61..166,
        },
        "GrammarStatement": GrammarRule {
            name: Identifier("GrammarStatement", 294..310),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_GRAMMAR", 318..328),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Identifier", 329..339),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 329..339),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("GrammarBlock", 340..352),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("GrammarBlock", 340..352),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 288..354,
        },
        "GrammarBlock": GrammarRule {
            name: Identifier("GrammarBlock", 361..373),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 355..389,
        },
        "ClassStatement": GrammarRule {
            name: Identifier("ClassStatement", 515..529),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("DecoratorCall", 536..549),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("DecoratorCall", 536..549),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("ModifierCall", 551..563),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ModifierCall", 551..563),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_CLASS", 566..574),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("name", 576..580),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 581..591),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilText {
                                                        text: "->",
                                                        insensitive: false,
                                                        range: 0..0,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("cast", 599..603),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 604..614),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_REMARK", 617..626),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_REMARK", 617..626),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 628..638),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 628..638),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 509..640,
        },
        "ClassBlock": GrammarRule {
            name: Identifier("ClassBlock", 647..657),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "|",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 673..683),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 673..683),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 641..689,
        },
        "OP_REMARK": GrammarRule {
            name: Identifier("OP_REMARK", 702..711),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "^",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 702..716,
        },
        "UnionStatement": GrammarRule {
            name: Identifier("UnionStatement", 844..858),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("DecoratorCall", 865..878),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("DecoratorCall", 865..878),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("ModifierCall", 880..892),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ModifierCall", 880..892),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_UNION", 895..903),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("name", 905..909),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 910..920),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_REMARK", 922..931),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_REMARK", 922..931),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("UnionBlock", 933..943),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("UnionBlock", 933..943),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 838..945,
        },
        "UnionBlock": GrammarRule {
            name: Identifier("UnionBlock", 952..962),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("UnionBranch", 973..984),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("UnionBranch", 973..984),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 946..991,
        },
        "UnionBranch": GrammarRule {
            name: Identifier("UnionBranch", 998..1009),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "|",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("ExpressionHard", 1020..1034),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ExpressionHard", 1020..1034),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("BranchTag", 1035..1044),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("BranchTag", 1035..1044),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 992..1047,
        },
        "BranchTag": GrammarRule {
            name: Identifier("BranchTag", 1075..1084),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "#",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 1095..1105),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1095..1105),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("RightAssociativity", 1106..1124),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("RightAssociativity", 1106..1124),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1048..1127,
        },
        "RightAssociativity": GrammarRule {
            name: Identifier("RightAssociativity", 1134..1152),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: ">",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 1128..1164,
        },
        "GroupStatement": GrammarRule {
            name: Identifier("GroupStatement", 1292..1306),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("DecoratorCall", 1313..1326),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("DecoratorCall", 1313..1326),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierCall", 1328..1340),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierCall", 1328..1340),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_GROUP", 1343..1351),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Identifier", 1352..1362),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1352..1362),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("GroupBlock", 1364..1374),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("GroupBlock", 1364..1374),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1286..1376,
        },
        "GroupBlock": GrammarRule {
            name: Identifier("GroupBlock", 1383..1393),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("GroupPair", 1404..1413),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("GroupPair", 1404..1413),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1377..1420,
        },
        "GroupPair": GrammarRule {
            name: Identifier("GroupPair", 1427..1436),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 1443..1453),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1443..1453),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ":",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Atomic", 1458..1464),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Atomic", 1458..1464),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1421..1466,
        },
        "DecoratorCall": GrammarRule {
            name: Identifier("DecoratorCall", 1593..1606),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("DecoratorName", 1613..1626),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("DecoratorName", 1613..1626),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("CallBody", 1627..1635),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("CallBody", 1627..1635),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1587..1637,
        },
        "DecoratorName": GrammarRule {
            name: Identifier("DecoratorName", 1663..1676),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilRegex {
                                    raw: "[@#]",
                                    span: 1683..1687,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Identifier", 1688..1698),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1688..1698),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1638..1700,
        },
        "FunctionCall": GrammarRule {
            name: Identifier("FunctionCall", 1707..1719),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("FunctionName", 1726..1738),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("FunctionName", 1726..1738),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("CallBody", 1739..1747),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("CallBody", 1739..1747),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1701..1749,
        },
        "FunctionName": GrammarRule {
            name: Identifier("FunctionName", 1773..1785),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "@",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Identifier", 1796..1806),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1796..1806),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1750..1808,
        },
        "CallBody": GrammarRule {
            name: Identifier("CallBody", 1815..1823),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("Expression", 1835..1845),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Expression", 1835..1845),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: IGNORED,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: YggdrasilText {
                                                                                        text: ",",
                                                                                        insensitive: false,
                                                                                        range: 0..0,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("Expression", 1851..1861),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("Expression", 1851..1861),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween {
                                                                min: 0,
                                                                max: 4294967295,
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: ",",
                                                                insensitive: false,
                                                                range: 0..0,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween {
                                                                min: 0,
                                                                max: 1,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1809..1876,
        },
        "Expression": GrammarRule {
            name: Identifier("Expression", 2004..2014),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ExpressionHard", 2021..2035),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ExpressionHard", 2021..2035),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "|",
                                                                    insensitive: false,
                                                                    range: 0..0,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("ExpressionHard", 2041..2055),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ExpressionHard", 2041..2055),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1998..2059,
        },
        "ExpressionHard": GrammarRule {
            name: Identifier("ExpressionHard", 2066..2080),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ExpressionSoft", 2083..2097),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ExpressionSoft", 2083..2097),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "~",
                                                                    insensitive: false,
                                                                    range: 0..0,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("ExpressionSoft", 2103..2117),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ExpressionSoft", 2103..2117),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2060..2121,
        },
        "ExpressionSoft": GrammarRule {
            name: Identifier("ExpressionSoft", 2128..2142),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ExpressionTag", 2145..2158),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ExpressionTag", 2145..2158),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ExpressionTag", 2159..2172),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExpressionTag", 2159..2172),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2122..2175,
        },
        "ExpressionTag": GrammarRule {
            name: Identifier("ExpressionTag", 2182..2195),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("Identifier", 2200..2210),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 2200..2210),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilText {
                                                        text: ":",
                                                        insensitive: false,
                                                        range: 0..0,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Term", 2217..2221),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2217..2221),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2176..2223,
        },
        "Term": GrammarRule {
            name: Identifier("Term", 2230..2234),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Prefix", 2241..2247),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Prefix", 2241..2247),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Atomic", 2249..2255),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Atomic", 2249..2255),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Suffix", 2256..2262),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Suffix", 2256..2262),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2224..2265,
        },
        "Prefix": GrammarRule {
            name: Identifier("Prefix", 2272..2278),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Negative", 2292..2300),
                        ),
                        branch: Expression {
                            tag: Identifier("Negative", 2292..2300),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Positive", 2312..2320),
                        ),
                        branch: Expression {
                            tag: Identifier("Positive", 2312..2320),
                            remark: false,
                            body: YggdrasilText {
                                text: "&",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Remark", 2332..2338),
                        ),
                        branch: Expression {
                            tag: Identifier("Remark", 2332..2338),
                            remark: false,
                            body: YggdrasilText {
                                text: "^",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                ],
            },
            range: 2266..2340,
        },
        "Suffix": GrammarRule {
            name: Identifier("Suffix", 2347..2353),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Optional", 2367..2375),
                        ),
                        branch: Expression {
                            tag: Identifier("Optional", 2367..2375),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Many", 2387..2391),
                        ),
                        branch: Expression {
                            tag: Identifier("Many", 2387..2391),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Many1", 2403..2408),
                        ),
                        branch: Expression {
                            tag: Identifier("Many1", 2403..2408),
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                ],
            },
            range: 2341..2410,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 2538..2544),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GroupExpression", 2553..2568),
                        ),
                        branch: Expression {
                            tag: Identifier("GroupExpression", 2553..2568),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("GroupExpression", 2553..2568),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("FunctionCall", 2575..2587),
                        ),
                        branch: Expression {
                            tag: Identifier("FunctionCall", 2575..2587),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("FunctionCall", 2575..2587),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 2594..2601),
                        ),
                        branch: Expression {
                            tag: Identifier("Boolean", 2594..2601),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 2594..2601),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("String", 2608..2614),
                        ),
                        branch: Expression {
                            tag: Identifier("String", 2608..2614),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("String", 2608..2614),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RegexEmbed", 2621..2631),
                        ),
                        branch: Expression {
                            tag: Identifier("RegexEmbed", 2621..2631),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RegexEmbed", 2621..2631),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RegexRange", 2638..2648),
                        ),
                        branch: Expression {
                            tag: Identifier("RegexRange", 2638..2648),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RegexRange", 2638..2648),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 2655..2665),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 2655..2665),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 2655..2665),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 2532..2667,
        },
        "GroupExpression": GrammarRule {
            name: Identifier("GroupExpression", 2674..2689),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "|",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Expression", 2705..2715),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 2705..2715),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2668..2721,
        },
        "String": GrammarRule {
            name: Identifier("String", 2857..2863),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Raw", 2895..2898),
                        ),
                        branch: Expression {
                            tag: Identifier("Raw", 2895..2898),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "'",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("StringRaw", 2876..2885),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("StringRaw", 2876..2885),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "'",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Escaped", 2928..2935),
                        ),
                        branch: Expression {
                            tag: Identifier("Escaped", 2928..2935),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "\"",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: Identifier("StringNormal", 2909..2921),
                                                remark: false,
                                                body: RuleReference {
                                                    name: Identifier("StringNormal", 2909..2921),
                                                    boxed: false,
                                                    inline: false,
                                                },
                                            },
                                            operators: [
                                                RepeatsBetween {
                                                    min: 0,
                                                    max: 4294967295,
                                                },
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "\"",
                                            insensitive: false,
                                            range: 0..0,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 2844..2937,
        },
        "StringRaw": GrammarRule {
            name: Identifier("StringRaw", 2949..2958),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[^']*",
                        span: 2965..2972,
                    },
                },
            },
            range: 2938..2974,
        },
        "StringNormal": GrammarRule {
            name: Identifier("StringNormal", 2981..2993),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EscapedUnicode", 3002..3016),
                        ),
                        branch: Expression {
                            tag: Identifier("EscapedUnicode", 3002..3016),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EscapedUnicode", 3002..3016),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EscapedCharacter", 3023..3039),
                        ),
                        branch: Expression {
                            tag: Identifier("EscapedCharacter", 3023..3039),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EscapedCharacter", 3023..3039),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextAny", 3046..3053),
                        ),
                        branch: Expression {
                            tag: Identifier("TextAny", 3046..3053),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextAny", 3046..3053),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 2975..3055,
        },
        "EscapedUnicode": GrammarRule {
            name: Identifier("EscapedUnicode", 3088..3102),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\\\u[0-9a-zA-Z]{4}",
                        span: 3104..3123,
                    },
                },
            },
            range: 3088..3123,
        },
        "EscapedCharacter": GrammarRule {
            name: Identifier("EscapedCharacter", 3128..3144),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\\\.",
                        span: 3146..3151,
                    },
                },
            },
            range: 3128..3151,
        },
        "TextAny": GrammarRule {
            name: Identifier("TextAny", 3156..3163),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[^\"\\]+",
                        span: 3165..3173,
                    },
                },
            },
            range: 3156..3173,
        },
        "RegexEmbed": GrammarRule {
            name: Identifier("RegexEmbed", 3315..3325),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "/",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: "/",
                                                                insensitive: false,
                                                                range: 0..0,
                                                            },
                                                        },
                                                        operators: [
                                                            Negative,
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ANY,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "/",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3297..3353,
        },
        "RegexRange": GrammarRule {
            name: Identifier("RegexRange", 3372..3382),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "[",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("RegexNegative", 3393..3406),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("RegexNegative", 3393..3406),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 1,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: "]",
                                                                insensitive: false,
                                                                range: 0..0,
                                                            },
                                                        },
                                                        operators: [
                                                            Negative,
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ANY,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "]",
                                    insensitive: false,
                                    range: 0..0,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3354..3425,
        },
        "RegexNegative": GrammarRule {
            name: Identifier("RegexNegative", 3432..3445),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "^",
                        insensitive: false,
                        range: 0..0,
                    },
                },
            },
            range: 3426..3457,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 3585..3597),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 3616..3626),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3616..3626),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ChoiceExpression {
                                                                    branches: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: ".",
                                                                                insensitive: false,
                                                                                range: 0..0,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: "::",
                                                                                insensitive: false,
                                                                                range: 0..0,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 3641..3651),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 3641..3651),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3579..3655,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 3662..3670),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 3677..3687),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3677..3687),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "::",
                                                                    insensitive: false,
                                                                    range: 0..0,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 3694..3704),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 3694..3704),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween {
                                            min: 0,
                                            max: 4294967295,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3656..3708,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 3720..3730),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 3737..3772,
                    },
                },
            },
            range: 3709..3774,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 3781..3788),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 3806..3810),
                        ),
                        branch: Expression {
                            tag: Identifier("True", 3806..3810),
                            remark: false,
                            body: YggdrasilText {
                                text: "true",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 3826..3831),
                        ),
                        branch: Expression {
                            tag: Identifier("False", 3826..3831),
                            remark: false,
                            body: YggdrasilText {
                                text: "false",
                                insensitive: false,
                                range: 0..0,
                            },
                        },
                    },
                ],
            },
            range: 3775..3833,
        },
        "ModifierCall": GrammarRule {
            name: Identifier("ModifierCall", 3968..3980),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ChoiceExpression {
                                            branches: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_CLASS", 3991..3999),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_UNION", 4002..4010),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_GROUP", 4013..4021),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_MACRO", 4024..4032),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_CLIMB", 4035..4043),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 4046..4056),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4046..4056),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3955..4058,
        },
        "KW_GRAMMAR": GrammarRule {
            name: Identifier("KW_GRAMMAR", 4087..4097),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "grammar",
                        span: 4099..4108,
                    },
                },
            },
            range: 4087..4108,
        },
        "KW_IMPORT": GrammarRule {
            name: Identifier("KW_IMPORT", 4113..4122),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "using|import|use",
                        span: 4124..4142,
                    },
                },
            },
            range: 4113..4142,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 4147..4155),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "class|struct",
                        span: 4157..4171,
                    },
                },
            },
            range: 4147..4171,
        },
        "KW_UNION": GrammarRule {
            name: Identifier("KW_UNION", 4176..4184),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "union|enum",
                        span: 4186..4198,
                    },
                },
            },
            range: 4176..4198,
        },
        "KW_GROUP": GrammarRule {
            name: Identifier("KW_GROUP", 4203..4211),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "group|token",
                        span: 4213..4226,
                    },
                },
            },
            range: 4203..4226,
        },
        "KW_CLIMB": GrammarRule {
            name: Identifier("KW_CLIMB", 4231..4239),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "climb",
                        span: 4241..4248,
                    },
                },
            },
            range: 4231..4248,
        },
        "KW_MACRO": GrammarRule {
            name: Identifier("KW_MACRO", 4253..4261),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "macro|def|function|func|fun|fn",
                        span: 4263..4295,
                    },
                },
            },
            range: 4253..4295,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 4432..4442),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 4449..4467,
                    },
                },
            },
            range: 4419..4469,
        },
        "Comment": GrammarRule {
            name: Identifier("Comment", 4499..4506),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\\\[^\\n\\r]*",
                        span: 4515..4527,
                    },
                },
            },
            range: 4470..4546,
        },
    },
    token_sets: {},
    functions: {},
}