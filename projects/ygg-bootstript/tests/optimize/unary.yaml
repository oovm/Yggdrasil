YGGRule {
    name: Identifier {
        data: "test1",
        range: Range {
            start: Position {
                line: 2,
                character: 0,
            },
            end: Position {
                line: 2,
                character: 5,
            },
        },
    },
    range: Range {
        start: Position {
            line: 2,
            character: 0,
        },
        end: Position {
            line: 2,
            character: 12,
        },
    },
    structure_name: Some(
        "Test1",
    ),
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        tag: None,
        ty: None,
        field: None,
        node: Unary(
            RefinedUnary {
                base: ExpressionNode {
                    tag: None,
                    ty: None,
                    field: None,
                    node: Data(
                        Identifier(
                            Identifier {
                                data: "e1",
                                range: Range {
                                    start: Position {
                                        line: 2,
                                        character: 8,
                                    },
                                    end: Position {
                                        line: 2,
                                        character: 10,
                                    },
                                },
                            },
                        ),
                    ),
                },
                prefix: [],
                suffix: [
                    "?",
                ],
            },
        ),
    },
}
YGGRule {
    name: Identifier {
        data: "test2",
        range: Range {
            start: Position {
                line: 3,
                character: 0,
            },
            end: Position {
                line: 3,
                character: 5,
            },
        },
    },
    range: Range {
        start: Position {
            line: 3,
            character: 0,
        },
        end: Position {
            line: 3,
            character: 12,
        },
    },
    structure_name: Some(
        "Test2",
    ),
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        tag: None,
        ty: None,
        field: None,
        node: Unary(
            RefinedUnary {
                base: ExpressionNode {
                    tag: None,
                    ty: None,
                    field: None,
                    node: Data(
                        Identifier(
                            Identifier {
                                data: "e1",
                                range: Range {
                                    start: Position {
                                        line: 3,
                                        character: 8,
                                    },
                                    end: Position {
                                        line: 3,
                                        character: 10,
                                    },
                                },
                            },
                        ),
                    ),
                },
                prefix: [],
                suffix: [
                    "+",
                ],
            },
        ),
    },
}
YGGRule {
    name: Identifier {
        data: "test4",
        range: Range {
            start: Position {
                line: 5,
                character: 0,
            },
            end: Position {
                line: 5,
                character: 5,
            },
        },
    },
    range: Range {
        start: Position {
            line: 5,
            character: 0,
        },
        end: Position {
            line: 5,
            character: 12,
        },
    },
    structure_name: Some(
        "Test4",
    ),
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        tag: None,
        ty: None,
        field: None,
        node: Unary(
            RefinedUnary {
                base: ExpressionNode {
                    tag: None,
                    ty: None,
                    field: None,
                    node: Data(
                        Identifier(
                            Identifier {
                                data: "e1",
                                range: Range {
                                    start: Position {
                                        line: 5,
                                        character: 9,
                                    },
                                    end: Position {
                                        line: 5,
                                        character: 11,
                                    },
                                },
                            },
                        ),
                    ),
                },
                prefix: [
                    "^",
                ],
                suffix: [],
            },
        ),
    },
}
YGGRule {
    name: Identifier {
        data: "test3",
        range: Range {
            start: Position {
                line: 4,
                character: 0,
            },
            end: Position {
                line: 4,
                character: 5,
            },
        },
    },
    range: Range {
        start: Position {
            line: 4,
            character: 0,
        },
        end: Position {
            line: 4,
            character: 12,
        },
    },
    structure_name: Some(
        "Test3",
    ),
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        tag: None,
        ty: None,
        field: None,
        node: Unary(
            RefinedUnary {
                base: ExpressionNode {
                    tag: None,
                    ty: None,
                    field: None,
                    node: Data(
                        Identifier(
                            Identifier {
                                data: "e1",
                                range: Range {
                                    start: Position {
                                        line: 4,
                                        character: 8,
                                    },
                                    end: Position {
                                        line: 4,
                                        character: 10,
                                    },
                                },
                            },
                        ),
                    ),
                },
                prefix: [],
                suffix: [
                    "*",
                ],
            },
        ),
    },
}
