Rule {
    name: "test1",
    type: "Test1",
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        base: a,
    },
    range: Range {
        start: Position {
            line: 2,
            character: 0,
        },
        end: Position {
            line: 2,
            character: 13,
        },
    },
}
Rule {
    name: "test2",
    type: "Test2",
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        base: Choice[
            ExpressionNode {
                base: Choice[
                    ExpressionNode {
                        base: a,
                    },
                    ExpressionNode {
                        base: b,
                    },
                ],
            },
            ExpressionNode {
                base: b,
            },
        ],
    },
    range: Range {
        start: Position {
            line: 3,
            character: 0,
        },
        end: Position {
            line: 3,
            character: 17,
        },
    },
}
Rule {
    name: "test3",
    type: "Test3",
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        base: 0,
    },
    range: Range {
        start: Position {
            line: 4,
            character: 0,
        },
        end: Position {
            line: 4,
            character: 13,
        },
    },
}
Rule {
    name: "test4",
    type: "Test4",
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        base: Choice[
            ExpressionNode {
                base: Choice[
                    ExpressionNode {
                        base: 0,
                    },
                    ExpressionNode {
                        base: 1,
                    },
                ],
            },
            ExpressionNode {
                base: 1,
            },
        ],
    },
    range: Range {
        start: Position {
            line: 5,
            character: 0,
        },
        end: Position {
            line: 5,
            character: 17,
        },
    },
}
Rule {
    name: "test5",
    type: "Test5",
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        base: "a",
    },
    range: Range {
        start: Position {
            line: 6,
            character: 0,
        },
        end: Position {
            line: 6,
            character: 17,
        },
    },
}
Rule {
    name: "test6",
    type: "Test6",
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        base: Choice[
            ExpressionNode {
                base: Choice[
                    ExpressionNode {
                        base: "a",
                    },
                ],
            },
            ExpressionNode {
                base: "b",
            },
        ],
    },
    range: Range {
        start: Position {
            line: 7,
            character: 0,
        },
        end: Position {
            line: 7,
            character: 23,
        },
    },
}
Rule {
    name: "test7",
    type: "Test7",
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        base: Choice[
            ExpressionNode {
                base: Choice[
                    ExpressionNode {
                        base: Choice[
                            ExpressionNode {
                                base: 0,
                            },
                            ExpressionNode {
                                base: 1,
                            },
                        ],
                    },
                    ExpressionNode {
                        base: 1,
                    },
                ],
            },
            ExpressionNode {
                base: 2,
            },
        ],
    },
    range: Range {
        start: Position {
            line: 9,
            character: 0,
        },
        end: Position {
            line: 9,
            character: 21,
        },
    },
}
Rule {
    name: "test8",
    type: "Test8",
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        base: Choice[
            ExpressionNode {
                base: Choice[
                    ExpressionNode {
                        base: 0,
                    },
                    ExpressionNode {
                        base: 1,
                    },
                ],
            },
            ExpressionNode {
                base: Choice[
                    ExpressionNode {
                        base: 1,
                    },
                    ExpressionNode {
                        base: 2,
                    },
                ],
            },
        ],
    },
    range: Range {
        start: Position {
            line: 10,
            character: 0,
        },
        end: Position {
            line: 10,
            character: 25,
        },
    },
}
Rule {
    name: "test9",
    type: "Test9",
    force_inline: false,
    already_inline: false,
    eliminate_unmarked: false,
    eliminate_unnamed: false,
    expression: ExpressionNode {
        base: Choice[
            ExpressionNode {
                field: "0 | a",
                base: 1,
            },
            ExpressionNode {
                field: "b",
                base: Choice[
                    ExpressionNode {
                        base: 1,
                    },
                    ExpressionNode {
                        base: 2,
                    },
                ],
            },
        ],
    },
    range: Range {
        start: Position {
            line: 11,
            character: 0,
        },
        end: Position {
            line: 11,
            character: 35,
        },
    },
}
