program = {SOI ~ statement* ~ EOI}

statement = {
    empty_statement
  | grammar_statement ~ eos?
  | fragment_statement ~ eos?
  | ignore_statement ~ eos?
  | assign_statement ~ eos?
  | comment_doc
}
empty_statement = {eos}
eos = @{";"}
/*====================================================================================================================*/
grammar_statement = {
    grammar ~ SYMBOL ~ string
  | grammar ~ SYMBOL ~ "{" ~ string* ~ "}"
  | grammar ~ SYMBOL ~ "[" ~ string* ~ "]"
}
grammar = {"grammar!"}
/*====================================================================================================================*/
fragment_statement = {
    fragment ~ SYMBOL
  | fragment ~ SYMBOL ~ "{" ~ SYMBOL* ~ "}"
}
fragment_pair = _{
    SYMBOL ~ ":" ~ SYMBOL
  | SYMBOL ~ ":" ~ "[" ~ SYMBOL* ~ "]"
}
fragment = {"fragment!"}
/*====================================================================================================================*/
import_statement = {
    import ~ string
  | import ~ string ~ "{" ~ SYMBOL ~ "}"
}
import = {"import!"}
/*====================================================================================================================*/
ignore_statement = {
    ignore ~ SYMBOL
  | ignore ~ "{" ~ SYMBOL* ~ "}"
  | ignore ~ "[" ~ SYMBOL* ~ "]"
}
ignore = {"ignore!"}
/*====================================================================================================================*/
assign_statement = {
    SYMBOL ~ assign_kind ~ "|"? ~ expression
}
assign_kind = @{("^"|"_"|"@")* ~ "=" }
/*====================================================================================================================*/
expression =  {expr ~ eos?}
expr       = !{term ~ (infix ~ term)*}
term       =  {prefix* ~ ("(" ~ expr ~ ")"|data) ~ (suffix|slice|apply)*}
infix = @{
    "~"
}
prefix = @{
    "!" | "^"
}
suffix = @{
    "?" | "+" | "*"
}
/*====================================================================================================================*/
// cmp     = !{("<"|">") ~ expr}
apply      = !{"(" ~ ")" | "(" ~ apply_kv ~ ("," ~ apply_kv)* ~ ","? ~")"}
apply_kv   =  {SYMBOL ~ ":" ~ expr|expr}
/*====================================================================================================================*/
data = {symbol_path}
slice = {"S"}
list = {"{"}
/*====================================================================================================================*/
string = @{
    "'" ~ (!"\'" ~ ANY | "\\" ~ ANY)* ~ "'"
  | "\"" ~ (!"\"" ~ ANY | "\\" ~ ANY)* ~ "\""
}
///#D19A66
integer    = @{"0"|ASCII_NONZERO_DIGIT ~ ("_"? ~ ASCII_DIGIT)*}
///#D19A66
SpecialValue = @{"true"|"false"|"null"}
/*====================================================================================================================*/

/*====================================================================================================================*/
comment_doc = @{"//" ~ ("!"|"?"|"*") ~ (!NEWLINE ~ ANY)*}
COMMENT = @{comment_s_l | comment_m_l}
comment_s_l = @{"//" ~ (!NEWLINE ~ ANY)*}
comment_m_l = @{"/*" ~ (comment_m_l | !"*/" ~ ANY)* ~ "*/"}
symbol_path = {
    SYMBOL ~ (("::"|".") ~ SYMBOL)*
}
SYMBOL = @{
    ("_" | XID_START) ~ XID_CONTINUE*
}
WHITESPACE = ${COMMENT|WHITE_SPACE|NEWLINE}
WHITE_SPACE = @{(" "|"\t")+}
NEWLINE = @{("\r\n"|"\r"|"\n")+}