program = {SOI ~ statement* ~ EOI}

statement = {
    comment_doc
  | empty_statement
  | grammar_statement ~ eos?
  | fragment_statement ~ eos?
  | ignore_statement ~ eos?
  | assign_statement ~ eos?
}
empty_statement = {eos}
eos = @{";"}
/*====================================================================================================================*/
grammar_statement = {
    grammar ~ SYMBOL ~ string
  | grammar ~ SYMBOL ~ "{" ~ string* ~ "}"
}
grammar = {"grammar!"}
/*====================================================================================================================*/
fragment_statement = {fragment ~ SYMBOL}
fragment_pair = _{
    SYMBOL ~ ":" ~ SYMBOL
  | SYMBOL ~ ":" ~ "[" ~ SYMBOL* ~ "]"
}
fragment = {"fragment!"}
/*====================================================================================================================*/
import_statement = {
    import ~ string
  | import ~ string ~ "{" ~ "}"
  | import ~ string ~ "{" ~ symbol_alias ~ ("," ~ symbol_alias)* ~ ","? ~"}"
}
import = {"import!"}
/*====================================================================================================================*/
ignore_statement = {
    ignore ~ SYMBOL
  | ignore ~ "{" ~ "}"
  | ignore ~ "{" ~ SYMBOL ~ ("," ~ SYMBOL)* ~ ","? ~"}"
}
ignore = {"ignore!"}
/*====================================================================================================================*/
assign_statement = {
    SYMBOL ~ assign_kind ~ "|"? ~ expression
}
assign_kind = @{("^"|"_"|"@")* ~ "=" }
/*====================================================================================================================*/
expression =  {expr ~ eos?}
expr       = !{term ~ (infix ~ term)*}
term       =  {prefix* ~ ("(" ~ expr ~ ")"|data) ~ (suffix|slice)*}
infix = @{
    "~"
}
prefix = @{
    "!" | "^"
}
suffix = @{
    "?" | "+" | "*"
}
/*====================================================================================================================*/
// cmp     = !{("<"|">") ~ expr}

/*====================================================================================================================*/
macro_   = {
    "@" ~ symbol_path ~ "(" ~ ")"
  | "@" ~ symbol_path ~ "(" ~ macro_kv ~ ("," ~ macro_kv)* ~ ","? ~")"
}
macro_kv =  {SYMBOL ~ "=" ~ expr|expr}
/*====================================================================================================================*/
data = {symbol_path|list}
slice = {"{" ~ "}"}
list = {"{" ~ "}"| "{" ~ data ~ ("," ~ data)* ~ ","? ~"}"}
/*====================================================================================================================*/
string = @{
    "'" ~ (!"\'" ~ ANY | "\\" ~ ANY)* ~ "'"
  | "\"" ~ (!"\"" ~ ANY | "\\" ~ ANY)* ~ "\""
}
///#D19A66
integer    = @{"0"|ASCII_NONZERO_DIGIT ~ ("_"? ~ ASCII_DIGIT)*}
///#D19A66
special = @{"true"|"false"|"null"}


/*====================================================================================================================*/
comment_doc = @{"//" ~ ("!"|"?"|"*") ~ (!NEWLINE ~ ANY)*}
comment_s_l = @{"//" ~ (!NEWLINE ~ ANY)*}
comment_m_l = @{"/*" ~ (comment_m_l | !"*/" ~ ANY)* ~ "*/"}
COMMENT = @{comment_s_l | comment_m_l}
symbol_path = {
    SYMBOL ~ (("::"|".") ~ SYMBOL)*
}
symbol_alias = {
    SYMBOL ~ ("as" ~ SYMBOL)?
}
SYMBOL = @{
    ("_" | XID_START) ~ XID_CONTINUE*
}
WHITESPACE = ${COMMENT|WHITE_SPACE|NEWLINE}
WHITE_SPACE = @{(" "|"\t")+}
NEWLINE = @{("\r\n"|"\r"|"\n")+}